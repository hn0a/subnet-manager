
==> Audit <==
|------------|----------------------|----------|--------------|---------|----------------------|----------------------|
|  Command   |         Args         | Profile  |     User     | Version |      Start Time      |       End Time       |
|------------|----------------------|----------|--------------|---------|----------------------|----------------------|
| start      |                      | minikube | misterfreeze | v1.33.1 | 16 Jun 24 01:12 CEST |                      |
| start      |                      | minikube | misterfreeze | v1.33.1 | 16 Jun 24 01:16 CEST |                      |
| start      |                      | minikube | misterfreeze | v1.33.1 | 16 Jun 24 01:53 CEST |                      |
| start      |                      | minikube | misterfreeze | v1.33.1 | 16 Jun 24 10:41 CEST | 16 Jun 24 10:43 CEST |
| service    | subnet-manager --url | minikube | misterfreeze | v1.33.1 | 16 Jun 24 10:47 CEST |                      |
| docker-env |                      | minikube | misterfreeze | v1.33.1 | 16 Jun 24 10:59 CEST | 16 Jun 24 10:59 CEST |
| service    | subnet-manager --url | minikube | misterfreeze | v1.33.1 | 16 Jun 24 11:02 CEST |                      |
| docker-env |                      | minikube | misterfreeze | v1.33.1 | 16 Jun 24 11:03 CEST | 16 Jun 24 11:03 CEST |
| service    | subnet-manager --url | minikube | misterfreeze | v1.33.1 | 16 Jun 24 11:04 CEST |                      |
|------------|----------------------|----------|--------------|---------|----------------------|----------------------|


==> Last Start <==
Log file created at: 2024/06/16 10:41:48
Running on machine: groenland
Binary: Built with gc go1.22.1 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0616 10:41:48.566043  126118 out.go:291] Setting OutFile to fd 1 ...
I0616 10:41:48.566225  126118 out.go:343] isatty.IsTerminal(1) = true
I0616 10:41:48.566227  126118 out.go:304] Setting ErrFile to fd 2...
I0616 10:41:48.566230  126118 out.go:343] isatty.IsTerminal(2) = true
I0616 10:41:48.566334  126118 root.go:338] Updating PATH: /home/misterfreeze/.minikube/bin
W0616 10:41:48.566516  126118 root.go:314] Error reading config file at /home/misterfreeze/.minikube/config/config.json: open /home/misterfreeze/.minikube/config/config.json: no such file or directory
I0616 10:41:48.566733  126118 out.go:298] Setting JSON to false
I0616 10:41:48.585500  126118 start.go:129] hostinfo: {"hostname":"groenland","uptime":30097,"bootTime":1718497212,"procs":198,"os":"linux","platform":"debian","platformFamily":"debian","platformVersion":"kali-rolling","kernelVersion":"6.8.11-amd64","kernelArch":"x86_64","virtualizationSystem":"vbox","virtualizationRole":"guest","hostId":"7a3601fb-005c-4cf7-af3b-9f7655befd99"}
I0616 10:41:48.585551  126118 start.go:139] virtualization: vbox guest
I0616 10:41:48.596342  126118 out.go:177] 😄  minikube v1.33.1 on Debian kali-rolling (vbox/amd64)
I0616 10:41:48.599882  126118 notify.go:220] Checking for updates...
W0616 10:41:48.599972  126118 preload.go:294] Failed to list preload files: open /home/misterfreeze/.minikube/cache/preloaded-tarball: no such file or directory
I0616 10:41:48.600004  126118 driver.go:392] Setting default libvirt URI to qemu:///system
I0616 10:41:48.600229  126118 global.go:112] Querying for installed drivers using PATH=/home/misterfreeze/.minikube/bin:/home/misterfreeze/Desktop/git/subnet-manager/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games
I0616 10:41:48.613965  126118 global.go:133] none default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0616 10:41:48.614035  126118 global.go:133] podman default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "podman": executable file not found in $PATH Reason: Fix:Install Podman Doc:https://minikube.sigs.k8s.io/docs/drivers/podman/ Version:}
I0616 10:41:48.614046  126118 global.go:133] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0616 10:41:48.614075  126118 global.go:133] kvm2 default: true priority: 8, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "virsh": executable file not found in $PATH Reason: Fix:Install libvirt Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/kvm2/ Version:}
I0616 10:41:48.614137  126118 global.go:133] qemu2 default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "qemu-system-x86_64": executable file not found in $PATH Reason: Fix:Install qemu-system Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/qemu/ Version:}
I0616 10:41:48.614177  126118 global.go:133] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/ Version:}
I0616 10:41:48.614241  126118 global.go:133] vmware default: false priority: 5, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "vmrun": executable file not found in $PATH Reason: Fix:Install vmrun Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ Version:}
I0616 10:41:48.675156  126118 docker.go:122] docker version: linux-20.10.25+dfsg1:
I0616 10:41:48.675227  126118 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0616 10:41:48.720909  126118 info.go:266] docker info: {ID:QKU4:PGIL:H5NW:6UYV:34LW:PNXR:ZN5J:OV54:TFYC:OZ3Q:JGT5:UEUH Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:6 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:23 OomKillDisable:false NGoroutines:33 SystemTime:2024-06-16 10:41:48.707901781 +0200 CEST LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.11-amd64 OperatingSystem:Kali GNU/Linux Rolling OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:3 MemTotal:23062884352 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:groenland Labels:[] ExperimentalBuild:false ServerVersion:20.10.25+dfsg1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:1.6.24~ds1-1 Expected:1.6.24~ds1-1} RuncCommit:{ID:1.1.12+ds1-2 Expected:1.1.12+ds1-2} InitCommit:{ID: Expected:} SecurityOptions:[name=apparmor name=seccomp,profile=default name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[] Warnings:<nil>}}
I0616 10:41:48.720962  126118 docker.go:295] overlay module found
I0616 10:41:48.720971  126118 global.go:133] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0616 10:41:48.720980  126118 driver.go:314] not recommending "none" due to default: false
I0616 10:41:48.720982  126118 driver.go:314] not recommending "ssh" due to default: false
I0616 10:41:48.720990  126118 driver.go:349] Picked: docker
I0616 10:41:48.720993  126118 driver.go:350] Alternatives: [none ssh]
I0616 10:41:48.720996  126118 driver.go:351] Rejects: [podman kvm2 qemu2 virtualbox vmware]
I0616 10:41:48.728933  126118 out.go:177] ✨  Automatically selected the docker driver. Other choices: none, ssh
I0616 10:41:48.732786  126118 start.go:297] selected driver: docker
I0616 10:41:48.732791  126118 start.go:901] validating driver "docker" against <nil>
I0616 10:41:48.732797  126118 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0616 10:41:48.732856  126118 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0616 10:41:48.781613  126118 info.go:266] docker info: {ID:QKU4:PGIL:H5NW:6UYV:34LW:PNXR:ZN5J:OV54:TFYC:OZ3Q:JGT5:UEUH Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:6 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:23 OomKillDisable:false NGoroutines:33 SystemTime:2024-06-16 10:41:48.762665395 +0200 CEST LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.11-amd64 OperatingSystem:Kali GNU/Linux Rolling OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:3 MemTotal:23062884352 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:groenland Labels:[] ExperimentalBuild:false ServerVersion:20.10.25+dfsg1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:1.6.24~ds1-1 Expected:1.6.24~ds1-1} RuncCommit:{ID:1.1.12+ds1-2 Expected:1.1.12+ds1-2} InitCommit:{ID: Expected:} SecurityOptions:[name=apparmor name=seccomp,profile=default name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[] Warnings:<nil>}}
I0616 10:41:48.781697  126118 start_flags.go:310] no existing cluster config was found, will generate one from the flags 
I0616 10:41:48.781860  126118 start_flags.go:393] Using suggested 5400MB memory alloc based on sys=21994MB, container=21994MB
I0616 10:41:48.781954  126118 start_flags.go:929] Wait components to verify : map[apiserver:true system_pods:true]
I0616 10:41:48.786064  126118 out.go:177] 📌  Using Docker driver with root privileges
I0616 10:41:48.790999  126118 cni.go:84] Creating CNI manager for ""
I0616 10:41:48.791015  126118 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0616 10:41:48.791020  126118 start_flags.go:319] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0616 10:41:48.791096  126118 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:5400 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/misterfreeze:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0616 10:41:48.794762  126118 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0616 10:41:48.798156  126118 cache.go:121] Beginning downloading kic base image for docker with docker
I0616 10:41:48.801707  126118 out.go:177] 🚜  Pulling base image v0.0.44 ...
I0616 10:41:48.805641  126118 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0616 10:41:48.806228  126118 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local docker daemon
I0616 10:41:48.834123  126118 cache.go:149] Downloading gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e to local cache
I0616 10:41:48.834227  126118 image.go:63] Checking for gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local cache directory
I0616 10:41:48.834292  126118 image.go:118] Writing gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e to local cache
I0616 10:41:48.969195  126118 preload.go:119] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.30.0/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4
I0616 10:41:48.969224  126118 cache.go:56] Caching tarball of preloaded images
I0616 10:41:48.969695  126118 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0616 10:41:48.978173  126118 out.go:177] 💾  Downloading Kubernetes v1.30.0 preload ...
I0616 10:41:48.983569  126118 preload.go:237] getting checksum for preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4 ...
I0616 10:41:49.279215  126118 download.go:107] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.30.0/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4?checksum=md5:00b6acf85a82438f3897c0a6fafdcee7 -> /home/misterfreeze/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4
I0616 10:42:13.814041  126118 preload.go:248] saving checksum for preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4 ...
I0616 10:42:13.814159  126118 preload.go:255] verifying checksum of /home/misterfreeze/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4 ...
I0616 10:42:15.858516  126118 cache.go:59] Finished verifying existence of preloaded tar for v1.30.0 on docker
I0616 10:42:15.858927  126118 profile.go:143] Saving config to /home/misterfreeze/.minikube/profiles/minikube/config.json ...
I0616 10:42:15.859059  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/profiles/minikube/config.json: {Name:mk07d0ba71c25e14c8d1689b4694677c7e472a3d Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:42:29.056210  126118 cache.go:152] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e as a tarball
I0616 10:42:29.056219  126118 cache.go:162] Loading gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e from local cache
I0616 10:42:57.635939  126118 cache.go:164] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e from cached tarball
I0616 10:42:57.636035  126118 cache.go:194] Successfully downloaded all kic artifacts
I0616 10:42:57.636067  126118 start.go:360] acquireMachinesLock for minikube: {Name:mk45ec40925f3f760ee8a0f620dffa6b353c33fa Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0616 10:42:57.636211  126118 start.go:364] duration metric: took 131.707µs to acquireMachinesLock for "minikube"
I0616 10:42:57.636229  126118 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:5400 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/misterfreeze:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0616 10:42:57.636269  126118 start.go:125] createHost starting for "" (driver="docker")
I0616 10:42:57.640173  126118 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=5400MB) ...
I0616 10:42:57.640562  126118 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0616 10:42:57.640582  126118 client.go:168] LocalClient.Create starting
I0616 10:42:57.640633  126118 main.go:141] libmachine: Creating CA: /home/misterfreeze/.minikube/certs/ca.pem
I0616 10:42:57.952341  126118 main.go:141] libmachine: Creating client certificate: /home/misterfreeze/.minikube/certs/cert.pem
I0616 10:42:58.040535  126118 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0616 10:42:58.069998  126118 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0616 10:42:58.070057  126118 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0616 10:42:58.070067  126118 cli_runner.go:164] Run: docker network inspect minikube
W0616 10:42:58.099734  126118 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0616 10:42:58.099761  126118 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error: No such network: minikube
I0616 10:42:58.099773  126118 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error: No such network: minikube

** /stderr **
I0616 10:42:58.099890  126118 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0616 10:42:58.129653  126118 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc001846880}
I0616 10:42:58.129674  126118 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0616 10:42:58.129708  126118 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0616 10:42:58.280585  126118 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0616 10:42:58.280600  126118 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0616 10:42:58.280647  126118 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0616 10:42:58.315578  126118 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0616 10:42:58.342918  126118 oci.go:103] Successfully created a docker volume minikube
I0616 10:42:58.343134  126118 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -d /var/lib
I0616 10:43:00.496703  126118 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -d /var/lib: (2.153545372s)
I0616 10:43:00.496858  126118 oci.go:107] Successfully prepared a docker volume minikube
I0616 10:43:00.496875  126118 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0616 10:43:00.496888  126118 kic.go:194] Starting extracting preloaded images to volume ...
I0616 10:43:00.496928  126118 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /home/misterfreeze/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -I lz4 -xf /preloaded.tar -C /extractDir
I0616 10:43:07.577163  126118 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /home/misterfreeze/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -I lz4 -xf /preloaded.tar -C /extractDir: (7.080209733s)
I0616 10:43:07.577179  126118 kic.go:203] duration metric: took 7.080287852s to extract preloaded images to volume ...
W0616 10:43:07.577292  126118 cgroups_linux.go:77] Your kernel does not support swap limit capabilities or the cgroup is not mounted.
W0616 10:43:07.577332  126118 oci.go:243] Your kernel does not support CPU cfs period/quota or the cgroup is not mounted.
I0616 10:43:07.577359  126118 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0616 10:43:07.610613  126118 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=5400mb -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e
I0616 10:43:08.560653  126118 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0616 10:43:08.598069  126118 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0616 10:43:08.650284  126118 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0616 10:43:08.782142  126118 oci.go:144] the created container "minikube" has a running status.
I0616 10:43:08.782157  126118 kic.go:225] Creating ssh key for kic: /home/misterfreeze/.minikube/machines/minikube/id_rsa...
I0616 10:43:09.115799  126118 kic_runner.go:191] docker (temp): /home/misterfreeze/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0616 10:43:09.326601  126118 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0616 10:43:09.370707  126118 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0616 10:43:09.370723  126118 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0616 10:43:09.520650  126118 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0616 10:43:09.597559  126118 machine.go:94] provisionDockerMachine start ...
I0616 10:43:09.597804  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:09.654694  126118 main.go:141] libmachine: Using SSH client type: native
I0616 10:43:09.664185  126118 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0616 10:43:09.664195  126118 main.go:141] libmachine: About to run SSH command:
hostname
I0616 10:43:09.870190  126118 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0616 10:43:09.870201  126118 ubuntu.go:169] provisioning hostname "minikube"
I0616 10:43:09.870242  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:09.927390  126118 main.go:141] libmachine: Using SSH client type: native
I0616 10:43:09.927549  126118 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0616 10:43:09.927554  126118 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0616 10:43:10.104933  126118 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0616 10:43:10.104977  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:10.132763  126118 main.go:141] libmachine: Using SSH client type: native
I0616 10:43:10.132882  126118 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0616 10:43:10.132889  126118 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0616 10:43:10.305643  126118 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0616 10:43:10.305658  126118 ubuntu.go:175] set auth options {CertDir:/home/misterfreeze/.minikube CaCertPath:/home/misterfreeze/.minikube/certs/ca.pem CaPrivateKeyPath:/home/misterfreeze/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/misterfreeze/.minikube/machines/server.pem ServerKeyPath:/home/misterfreeze/.minikube/machines/server-key.pem ClientKeyPath:/home/misterfreeze/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/misterfreeze/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/misterfreeze/.minikube}
I0616 10:43:10.305668  126118 ubuntu.go:177] setting up certificates
I0616 10:43:10.305674  126118 provision.go:84] configureAuth start
I0616 10:43:10.305712  126118 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0616 10:43:10.336948  126118 provision.go:143] copyHostCerts
I0616 10:43:10.336986  126118 exec_runner.go:151] cp: /home/misterfreeze/.minikube/certs/ca.pem --> /home/misterfreeze/.minikube/ca.pem (1094 bytes)
I0616 10:43:10.337054  126118 exec_runner.go:151] cp: /home/misterfreeze/.minikube/certs/cert.pem --> /home/misterfreeze/.minikube/cert.pem (1139 bytes)
I0616 10:43:10.337089  126118 exec_runner.go:151] cp: /home/misterfreeze/.minikube/certs/key.pem --> /home/misterfreeze/.minikube/key.pem (1675 bytes)
I0616 10:43:10.337119  126118 provision.go:117] generating server cert: /home/misterfreeze/.minikube/machines/server.pem ca-key=/home/misterfreeze/.minikube/certs/ca.pem private-key=/home/misterfreeze/.minikube/certs/ca-key.pem org=misterfreeze.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0616 10:43:10.560639  126118 provision.go:177] copyRemoteCerts
I0616 10:43:10.560673  126118 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0616 10:43:10.560697  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:10.588369  126118 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/misterfreeze/.minikube/machines/minikube/id_rsa Username:docker}
I0616 10:43:10.690381  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1094 bytes)
I0616 10:43:10.727788  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/machines/server.pem --> /etc/docker/server.pem (1196 bytes)
I0616 10:43:10.764570  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0616 10:43:10.795801  126118 provision.go:87] duration metric: took 490.118783ms to configureAuth
I0616 10:43:10.795816  126118 ubuntu.go:193] setting minikube options for container-runtime
I0616 10:43:10.796026  126118 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0616 10:43:10.796099  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:10.825295  126118 main.go:141] libmachine: Using SSH client type: native
I0616 10:43:10.825408  126118 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0616 10:43:10.825412  126118 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0616 10:43:10.972641  126118 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0616 10:43:10.972650  126118 ubuntu.go:71] root file system type: overlay
I0616 10:43:10.972713  126118 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0616 10:43:10.972750  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:11.006577  126118 main.go:141] libmachine: Using SSH client type: native
I0616 10:43:11.006720  126118 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0616 10:43:11.006760  126118 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0616 10:43:11.159597  126118 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0616 10:43:11.159757  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:11.187753  126118 main.go:141] libmachine: Using SSH client type: native
I0616 10:43:11.187870  126118 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0616 10:43:11.187878  126118 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0616 10:43:12.646082  126118 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2024-04-30 11:46:26.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2024-06-16 08:43:11.152993340 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0616 10:43:12.646537  126118 machine.go:97] duration metric: took 3.048525038s to provisionDockerMachine
I0616 10:43:12.646549  126118 client.go:171] duration metric: took 15.005963471s to LocalClient.Create
I0616 10:43:12.646559  126118 start.go:167] duration metric: took 15.005998146s to libmachine.API.Create "minikube"
I0616 10:43:12.646565  126118 start.go:293] postStartSetup for "minikube" (driver="docker")
I0616 10:43:12.646571  126118 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0616 10:43:12.646608  126118 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0616 10:43:12.646663  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:12.673267  126118 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/misterfreeze/.minikube/machines/minikube/id_rsa Username:docker}
I0616 10:43:12.777170  126118 ssh_runner.go:195] Run: cat /etc/os-release
I0616 10:43:12.784125  126118 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0616 10:43:12.784139  126118 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0616 10:43:12.784144  126118 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0616 10:43:12.784148  126118 info.go:137] Remote host: Ubuntu 22.04.4 LTS
I0616 10:43:12.784156  126118 filesync.go:126] Scanning /home/misterfreeze/.minikube/addons for local assets ...
I0616 10:43:12.784313  126118 filesync.go:126] Scanning /home/misterfreeze/.minikube/files for local assets ...
I0616 10:43:12.784329  126118 start.go:296] duration metric: took 137.761581ms for postStartSetup
I0616 10:43:12.784910  126118 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0616 10:43:12.818313  126118 profile.go:143] Saving config to /home/misterfreeze/.minikube/profiles/minikube/config.json ...
I0616 10:43:12.819306  126118 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0616 10:43:12.819336  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:12.847803  126118 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/misterfreeze/.minikube/machines/minikube/id_rsa Username:docker}
I0616 10:43:12.950786  126118 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0616 10:43:12.960534  126118 start.go:128] duration metric: took 15.324255426s to createHost
I0616 10:43:12.960547  126118 start.go:83] releasing machines lock for "minikube", held for 15.324329894s
I0616 10:43:12.960592  126118 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0616 10:43:12.987287  126118 ssh_runner.go:195] Run: cat /version.json
I0616 10:43:12.987327  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:12.987505  126118 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0616 10:43:12.987538  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:13.032826  126118 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/misterfreeze/.minikube/machines/minikube/id_rsa Username:docker}
I0616 10:43:13.045049  126118 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/misterfreeze/.minikube/machines/minikube/id_rsa Username:docker}
I0616 10:43:13.142541  126118 ssh_runner.go:195] Run: systemctl --version
I0616 10:43:13.389738  126118 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0616 10:43:13.399242  126118 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0616 10:43:13.438884  126118 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0616 10:43:13.438925  126118 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0616 10:43:13.492084  126118 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist, /etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I0616 10:43:13.492095  126118 start.go:494] detecting cgroup driver to use...
I0616 10:43:13.492116  126118 detect.go:199] detected "systemd" cgroup driver on host os
I0616 10:43:13.492183  126118 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0616 10:43:13.515878  126118 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0616 10:43:13.531164  126118 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0616 10:43:13.546944  126118 containerd.go:146] configuring containerd to use "systemd" as cgroup driver...
I0616 10:43:13.546985  126118 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = true|g' /etc/containerd/config.toml"
I0616 10:43:13.563146  126118 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0616 10:43:13.581300  126118 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0616 10:43:13.597366  126118 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0616 10:43:13.613601  126118 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0616 10:43:13.627310  126118 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0616 10:43:13.644005  126118 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0616 10:43:13.662780  126118 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0616 10:43:13.679438  126118 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0616 10:43:13.694799  126118 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0616 10:43:13.706315  126118 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0616 10:43:13.788392  126118 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0616 10:43:13.897486  126118 start.go:494] detecting cgroup driver to use...
I0616 10:43:13.897561  126118 detect.go:199] detected "systemd" cgroup driver on host os
I0616 10:43:13.897593  126118 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0616 10:43:13.924210  126118 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0616 10:43:13.924250  126118 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0616 10:43:13.957069  126118 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0616 10:43:13.995336  126118 ssh_runner.go:195] Run: which cri-dockerd
I0616 10:43:14.012733  126118 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0616 10:43:14.037040  126118 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0616 10:43:14.076692  126118 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0616 10:43:14.195533  126118 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0616 10:43:14.294093  126118 docker.go:574] configuring docker to use "systemd" as cgroup driver...
I0616 10:43:14.294164  126118 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (129 bytes)
I0616 10:43:14.323562  126118 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0616 10:43:14.432943  126118 ssh_runner.go:195] Run: sudo systemctl restart docker
I0616 10:43:15.792633  126118 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.359524501s)
I0616 10:43:15.792674  126118 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0616 10:43:15.810231  126118 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0616 10:43:15.826795  126118 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0616 10:43:15.904057  126118 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0616 10:43:15.972716  126118 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0616 10:43:16.045535  126118 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0616 10:43:16.089653  126118 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0616 10:43:16.109114  126118 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0616 10:43:16.177188  126118 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0616 10:43:16.336798  126118 start.go:541] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0616 10:43:16.336876  126118 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0616 10:43:16.348339  126118 start.go:562] Will wait 60s for crictl version
I0616 10:43:16.348376  126118 ssh_runner.go:195] Run: which crictl
I0616 10:43:16.357019  126118 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0616 10:43:16.403644  126118 start.go:578] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  26.1.1
RuntimeApiVersion:  v1
I0616 10:43:16.403684  126118 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0616 10:43:16.441267  126118 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0616 10:43:16.487855  126118 out.go:204] 🐳  Preparing Kubernetes v1.30.0 on Docker 26.1.1 ...
I0616 10:43:16.488002  126118 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0616 10:43:16.513514  126118 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0616 10:43:16.521618  126118 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0616 10:43:16.543375  126118 kubeadm.go:877] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:5400 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/misterfreeze:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0616 10:43:16.543453  126118 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0616 10:43:16.543484  126118 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0616 10:43:16.572569  126118 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0616 10:43:16.572576  126118 docker.go:615] Images already preloaded, skipping extraction
I0616 10:43:16.572619  126118 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0616 10:43:16.606568  126118 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0616 10:43:16.606578  126118 cache_images.go:84] Images are preloaded, skipping loading
I0616 10:43:16.606584  126118 kubeadm.go:928] updating node { 192.168.49.2 8443 v1.30.0 docker true true} ...
I0616 10:43:16.606655  126118 kubeadm.go:940] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.30.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0616 10:43:16.606696  126118 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0616 10:43:16.669320  126118 cni.go:84] Creating CNI manager for ""
I0616 10:43:16.669332  126118 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0616 10:43:16.669338  126118 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0616 10:43:16.669351  126118 kubeadm.go:181] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.30.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:systemd ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0616 10:43:16.669428  126118 kubeadm.go:187] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.30.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: systemd
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0616 10:43:16.669469  126118 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.30.0
I0616 10:43:16.683934  126118 binaries.go:44] Found k8s binaries, skipping transfer
I0616 10:43:16.684019  126118 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0616 10:43:16.703909  126118 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0616 10:43:16.728727  126118 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0616 10:43:16.759322  126118 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2149 bytes)
I0616 10:43:16.786452  126118 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0616 10:43:16.792178  126118 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0616 10:43:16.810042  126118 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0616 10:43:16.877777  126118 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0616 10:43:16.919386  126118 certs.go:68] Setting up /home/misterfreeze/.minikube/profiles/minikube for IP: 192.168.49.2
I0616 10:43:16.919577  126118 certs.go:194] generating shared ca certs ...
I0616 10:43:16.919592  126118 certs.go:226] acquiring lock for ca certs: {Name:mkfc569264f9fa80addea79eb3285586abf2cfee Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:16.919869  126118 certs.go:240] generating "minikubeCA" ca cert: /home/misterfreeze/.minikube/ca.key
I0616 10:43:17.112087  126118 crypto.go:156] Writing cert to /home/misterfreeze/.minikube/ca.crt ...
I0616 10:43:17.112097  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/ca.crt: {Name:mkd0a30042ede40682bea2aa199a22e9abb83abd Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:17.112561  126118 crypto.go:164] Writing key to /home/misterfreeze/.minikube/ca.key ...
I0616 10:43:17.112568  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/ca.key: {Name:mk2092ada03587423038e64554a6c02f91e8ffa9 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:17.112633  126118 certs.go:240] generating "proxyClientCA" ca cert: /home/misterfreeze/.minikube/proxy-client-ca.key
I0616 10:43:17.162165  126118 crypto.go:156] Writing cert to /home/misterfreeze/.minikube/proxy-client-ca.crt ...
I0616 10:43:17.162195  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/proxy-client-ca.crt: {Name:mka7c1eda29401cb98c9ec9ddf1e1ead6fec773b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:17.162494  126118 crypto.go:164] Writing key to /home/misterfreeze/.minikube/proxy-client-ca.key ...
I0616 10:43:17.162501  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/proxy-client-ca.key: {Name:mkf78d9bb8dd90133439027917ceb4bf17eb8eab Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:17.162969  126118 certs.go:256] generating profile certs ...
I0616 10:43:17.163006  126118 certs.go:363] generating signed profile cert for "minikube-user": /home/misterfreeze/.minikube/profiles/minikube/client.key
I0616 10:43:17.163012  126118 crypto.go:68] Generating cert /home/misterfreeze/.minikube/profiles/minikube/client.crt with IP's: []
I0616 10:43:17.335798  126118 crypto.go:156] Writing cert to /home/misterfreeze/.minikube/profiles/minikube/client.crt ...
I0616 10:43:17.335813  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/profiles/minikube/client.crt: {Name:mk0670d3bad977a6827473c8aa2a5f135041e700 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:17.336520  126118 crypto.go:164] Writing key to /home/misterfreeze/.minikube/profiles/minikube/client.key ...
I0616 10:43:17.336529  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/profiles/minikube/client.key: {Name:mkfc39834aa70b22ad9633e313d346efc1164f49 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:17.336581  126118 certs.go:363] generating signed profile cert for "minikube": /home/misterfreeze/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I0616 10:43:17.336594  126118 crypto.go:68] Generating cert /home/misterfreeze/.minikube/profiles/minikube/apiserver.crt.7fb57e3c with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I0616 10:43:17.535645  126118 crypto.go:156] Writing cert to /home/misterfreeze/.minikube/profiles/minikube/apiserver.crt.7fb57e3c ...
I0616 10:43:17.535658  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/profiles/minikube/apiserver.crt.7fb57e3c: {Name:mk3c08e7fb8ac6b9f9d934a41cf6bf98923befdc Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:17.535820  126118 crypto.go:164] Writing key to /home/misterfreeze/.minikube/profiles/minikube/apiserver.key.7fb57e3c ...
I0616 10:43:17.535826  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/profiles/minikube/apiserver.key.7fb57e3c: {Name:mk2f9da676c677f5fc311f67d1c487b55f3ca00e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:17.535933  126118 certs.go:381] copying /home/misterfreeze/.minikube/profiles/minikube/apiserver.crt.7fb57e3c -> /home/misterfreeze/.minikube/profiles/minikube/apiserver.crt
I0616 10:43:17.535996  126118 certs.go:385] copying /home/misterfreeze/.minikube/profiles/minikube/apiserver.key.7fb57e3c -> /home/misterfreeze/.minikube/profiles/minikube/apiserver.key
I0616 10:43:17.536031  126118 certs.go:363] generating signed profile cert for "aggregator": /home/misterfreeze/.minikube/profiles/minikube/proxy-client.key
I0616 10:43:17.536041  126118 crypto.go:68] Generating cert /home/misterfreeze/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0616 10:43:17.785527  126118 crypto.go:156] Writing cert to /home/misterfreeze/.minikube/profiles/minikube/proxy-client.crt ...
I0616 10:43:17.785555  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/profiles/minikube/proxy-client.crt: {Name:mk7ee6378fbb0487e7c3bce136a3bff0ccab023a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:17.785719  126118 crypto.go:164] Writing key to /home/misterfreeze/.minikube/profiles/minikube/proxy-client.key ...
I0616 10:43:17.785724  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.minikube/profiles/minikube/proxy-client.key: {Name:mkf6cfb57008a4733dc42c937d641f3537eb082a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:17.785891  126118 certs.go:484] found cert: /home/misterfreeze/.minikube/certs/ca-key.pem (1679 bytes)
I0616 10:43:17.785911  126118 certs.go:484] found cert: /home/misterfreeze/.minikube/certs/ca.pem (1094 bytes)
I0616 10:43:17.785923  126118 certs.go:484] found cert: /home/misterfreeze/.minikube/certs/cert.pem (1139 bytes)
I0616 10:43:17.785935  126118 certs.go:484] found cert: /home/misterfreeze/.minikube/certs/key.pem (1675 bytes)
I0616 10:43:17.786286  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0616 10:43:17.821276  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0616 10:43:17.853087  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0616 10:43:17.891762  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0616 10:43:17.925856  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0616 10:43:17.956975  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I0616 10:43:17.989530  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0616 10:43:18.022431  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0616 10:43:18.051144  126118 ssh_runner.go:362] scp /home/misterfreeze/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0616 10:43:18.084817  126118 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (740 bytes)
I0616 10:43:18.109480  126118 ssh_runner.go:195] Run: openssl version
I0616 10:43:18.121680  126118 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0616 10:43:18.136534  126118 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0616 10:43:18.143876  126118 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Jun 16 08:43 /usr/share/ca-certificates/minikubeCA.pem
I0616 10:43:18.143903  126118 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0616 10:43:18.154568  126118 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0616 10:43:18.168976  126118 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0616 10:43:18.179264  126118 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I0616 10:43:18.179334  126118 kubeadm.go:391] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:5400 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/misterfreeze:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0616 10:43:18.179538  126118 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0616 10:43:18.209321  126118 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0616 10:43:18.233736  126118 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0616 10:43:18.256881  126118 kubeadm.go:213] ignoring SystemVerification for kubeadm because of docker driver
I0616 10:43:18.256915  126118 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0616 10:43:18.270788  126118 kubeadm.go:154] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0616 10:43:18.270793  126118 kubeadm.go:156] found existing configuration files:

I0616 10:43:18.271161  126118 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0616 10:43:18.285706  126118 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0616 10:43:18.285741  126118 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0616 10:43:18.303800  126118 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0616 10:43:18.317349  126118 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0616 10:43:18.317388  126118 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0616 10:43:18.328941  126118 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0616 10:43:18.347148  126118 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0616 10:43:18.347182  126118 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0616 10:43:18.361231  126118 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0616 10:43:18.383975  126118 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0616 10:43:18.384079  126118 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0616 10:43:18.406257  126118 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0616 10:43:18.473547  126118 kubeadm.go:309] [init] Using Kubernetes version: v1.30.0
I0616 10:43:18.473578  126118 kubeadm.go:309] [preflight] Running pre-flight checks
I0616 10:43:18.545304  126118 kubeadm.go:309] [preflight] The system verification failed. Printing the output from the verification:
I0616 10:43:18.545343  126118 kubeadm.go:309] [0;37mKERNEL_VERSION[0m: [0;32m6.8.11-amd64[0m
I0616 10:43:18.545363  126118 kubeadm.go:309] [0;37mOS[0m: [0;32mLinux[0m
I0616 10:43:18.545390  126118 kubeadm.go:309] [0;37mCGROUPS_CPU[0m: [0;32menabled[0m
I0616 10:43:18.545417  126118 kubeadm.go:309] [0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
I0616 10:43:18.545445  126118 kubeadm.go:309] [0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
I0616 10:43:18.545478  126118 kubeadm.go:309] [0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
I0616 10:43:18.545505  126118 kubeadm.go:309] [0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
I0616 10:43:18.545532  126118 kubeadm.go:309] [0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
I0616 10:43:18.545560  126118 kubeadm.go:309] [0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
I0616 10:43:18.545585  126118 kubeadm.go:309] [0;37mCGROUPS_IO[0m: [0;32menabled[0m
I0616 10:43:18.701682  126118 kubeadm.go:309] [preflight] Pulling images required for setting up a Kubernetes cluster
I0616 10:43:18.701767  126118 kubeadm.go:309] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0616 10:43:18.701822  126118 kubeadm.go:309] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0616 10:43:19.120467  126118 kubeadm.go:309] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0616 10:43:19.125949  126118 out.go:204]     ▪ Generating certificates and keys ...
I0616 10:43:19.126014  126118 kubeadm.go:309] [certs] Using existing ca certificate authority
I0616 10:43:19.126052  126118 kubeadm.go:309] [certs] Using existing apiserver certificate and key on disk
I0616 10:43:19.509093  126118 kubeadm.go:309] [certs] Generating "apiserver-kubelet-client" certificate and key
I0616 10:43:19.662397  126118 kubeadm.go:309] [certs] Generating "front-proxy-ca" certificate and key
I0616 10:43:20.007950  126118 kubeadm.go:309] [certs] Generating "front-proxy-client" certificate and key
I0616 10:43:20.408757  126118 kubeadm.go:309] [certs] Generating "etcd/ca" certificate and key
I0616 10:43:20.620916  126118 kubeadm.go:309] [certs] Generating "etcd/server" certificate and key
I0616 10:43:20.621221  126118 kubeadm.go:309] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0616 10:43:20.792713  126118 kubeadm.go:309] [certs] Generating "etcd/peer" certificate and key
I0616 10:43:20.793740  126118 kubeadm.go:309] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0616 10:43:20.910877  126118 kubeadm.go:309] [certs] Generating "etcd/healthcheck-client" certificate and key
I0616 10:43:21.211435  126118 kubeadm.go:309] [certs] Generating "apiserver-etcd-client" certificate and key
I0616 10:43:21.351371  126118 kubeadm.go:309] [certs] Generating "sa" key and public key
I0616 10:43:21.351410  126118 kubeadm.go:309] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0616 10:43:21.450123  126118 kubeadm.go:309] [kubeconfig] Writing "admin.conf" kubeconfig file
I0616 10:43:21.648238  126118 kubeadm.go:309] [kubeconfig] Writing "super-admin.conf" kubeconfig file
I0616 10:43:21.723455  126118 kubeadm.go:309] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0616 10:43:21.780476  126118 kubeadm.go:309] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0616 10:43:21.902452  126118 kubeadm.go:309] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0616 10:43:21.903440  126118 kubeadm.go:309] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0616 10:43:21.910634  126118 kubeadm.go:309] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0616 10:43:21.920638  126118 out.go:204]     ▪ Booting up control plane ...
I0616 10:43:21.920782  126118 kubeadm.go:309] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0616 10:43:21.920911  126118 kubeadm.go:309] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0616 10:43:21.920951  126118 kubeadm.go:309] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0616 10:43:21.949972  126118 kubeadm.go:309] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0616 10:43:21.951895  126118 kubeadm.go:309] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0616 10:43:21.951927  126118 kubeadm.go:309] [kubelet-start] Starting the kubelet
I0616 10:43:22.075318  126118 kubeadm.go:309] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
I0616 10:43:22.075408  126118 kubeadm.go:309] [kubelet-check] Waiting for a healthy kubelet. This can take up to 4m0s
I0616 10:43:23.079619  126118 kubeadm.go:309] [kubelet-check] The kubelet is healthy after 1.00247156s
I0616 10:43:23.079724  126118 kubeadm.go:309] [api-check] Waiting for a healthy API server. This can take up to 4m0s
I0616 10:43:29.085435  126118 kubeadm.go:309] [api-check] The API server is healthy after 6.004211572s
I0616 10:43:29.104290  126118 kubeadm.go:309] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0616 10:43:29.123509  126118 kubeadm.go:309] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0616 10:43:29.164012  126118 kubeadm.go:309] [upload-certs] Skipping phase. Please see --upload-certs
I0616 10:43:29.164125  126118 kubeadm.go:309] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0616 10:43:29.186353  126118 kubeadm.go:309] [bootstrap-token] Using token: ue9urs.k7evizqzfo2vze1q
I0616 10:43:29.191087  126118 out.go:204]     ▪ Configuring RBAC rules ...
I0616 10:43:29.191363  126118 kubeadm.go:309] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0616 10:43:29.202339  126118 kubeadm.go:309] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0616 10:43:29.215216  126118 kubeadm.go:309] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0616 10:43:29.219200  126118 kubeadm.go:309] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0616 10:43:29.222505  126118 kubeadm.go:309] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0616 10:43:29.230000  126118 kubeadm.go:309] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0616 10:43:29.499063  126118 kubeadm.go:309] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0616 10:43:29.962894  126118 kubeadm.go:309] [addons] Applied essential addon: CoreDNS
I0616 10:43:30.509363  126118 kubeadm.go:309] [addons] Applied essential addon: kube-proxy
I0616 10:43:30.511253  126118 kubeadm.go:309] 
I0616 10:43:30.511294  126118 kubeadm.go:309] Your Kubernetes control-plane has initialized successfully!
I0616 10:43:30.511297  126118 kubeadm.go:309] 
I0616 10:43:30.511343  126118 kubeadm.go:309] To start using your cluster, you need to run the following as a regular user:
I0616 10:43:30.511345  126118 kubeadm.go:309] 
I0616 10:43:30.511360  126118 kubeadm.go:309]   mkdir -p $HOME/.kube
I0616 10:43:30.511394  126118 kubeadm.go:309]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0616 10:43:30.511424  126118 kubeadm.go:309]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0616 10:43:30.511426  126118 kubeadm.go:309] 
I0616 10:43:30.511457  126118 kubeadm.go:309] Alternatively, if you are the root user, you can run:
I0616 10:43:30.511459  126118 kubeadm.go:309] 
I0616 10:43:30.511487  126118 kubeadm.go:309]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0616 10:43:30.511489  126118 kubeadm.go:309] 
I0616 10:43:30.511520  126118 kubeadm.go:309] You should now deploy a pod network to the cluster.
I0616 10:43:30.511564  126118 kubeadm.go:309] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0616 10:43:30.511604  126118 kubeadm.go:309]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0616 10:43:30.511606  126118 kubeadm.go:309] 
I0616 10:43:30.511656  126118 kubeadm.go:309] You can now join any number of control-plane nodes by copying certificate authorities
I0616 10:43:30.511701  126118 kubeadm.go:309] and service account keys on each node and then running the following as root:
I0616 10:43:30.511703  126118 kubeadm.go:309] 
I0616 10:43:30.511753  126118 kubeadm.go:309]   kubeadm join control-plane.minikube.internal:8443 --token ue9urs.k7evizqzfo2vze1q \
I0616 10:43:30.511814  126118 kubeadm.go:309] 	--discovery-token-ca-cert-hash sha256:f287f48ca5591ea7e0348a18a2268d6c5479089a6a28b5907690a38c3806e4b6 \
I0616 10:43:30.511826  126118 kubeadm.go:309] 	--control-plane 
I0616 10:43:30.511828  126118 kubeadm.go:309] 
I0616 10:43:30.511878  126118 kubeadm.go:309] Then you can join any number of worker nodes by running the following on each as root:
I0616 10:43:30.511880  126118 kubeadm.go:309] 
I0616 10:43:30.511928  126118 kubeadm.go:309] kubeadm join control-plane.minikube.internal:8443 --token ue9urs.k7evizqzfo2vze1q \
I0616 10:43:30.511989  126118 kubeadm.go:309] 	--discovery-token-ca-cert-hash sha256:f287f48ca5591ea7e0348a18a2268d6c5479089a6a28b5907690a38c3806e4b6 
I0616 10:43:30.515390  126118 kubeadm.go:309] 	[WARNING Swap]: swap is supported for cgroup v2 only; the NodeSwap feature gate of the kubelet is beta but disabled by default
I0616 10:43:30.515517  126118 kubeadm.go:309] 	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/6.8.11-amd64\n", err: exit status 1
I0616 10:43:30.515580  126118 kubeadm.go:309] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0616 10:43:30.515639  126118 cni.go:84] Creating CNI manager for ""
I0616 10:43:30.515649  126118 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0616 10:43:30.519769  126118 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0616 10:43:30.523897  126118 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0616 10:43:30.549303  126118 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (496 bytes)
I0616 10:43:30.601533  126118 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0616 10:43:30.601629  126118 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.30.0/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0616 10:43:30.601734  126118 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.30.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig label --overwrite nodes minikube minikube.k8s.io/updated_at=2024_06_16T10_43_30_0700 minikube.k8s.io/version=v1.33.1 minikube.k8s.io/commit=5883c09216182566a63dff4c326a6fc9ed2982ff minikube.k8s.io/name=minikube minikube.k8s.io/primary=true
I0616 10:43:30.770592  126118 ops.go:34] apiserver oom_adj: -16
I0616 10:43:30.770606  126118 kubeadm.go:1107] duration metric: took 169.017999ms to wait for elevateKubeSystemPrivileges
W0616 10:43:30.770622  126118 kubeadm.go:286] apiserver tunnel failed: apiserver port not set
I0616 10:43:30.770625  126118 kubeadm.go:393] duration metric: took 12.591300588s to StartCluster
I0616 10:43:30.770635  126118 settings.go:142] acquiring lock: {Name:mk2170480f4f3119261bb8e09d810c3592e12e19 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:30.770699  126118 settings.go:150] Updating kubeconfig:  /home/misterfreeze/.kube/config
I0616 10:43:30.772341  126118 lock.go:35] WriteFile acquiring /home/misterfreeze/.kube/config: {Name:mk2633fa0aaeb239f56da13b13d552e2f9323569 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0616 10:43:30.772539  126118 start.go:234] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0616 10:43:30.782272  126118 out.go:177] 🔎  Verifying Kubernetes components...
I0616 10:43:30.772628  126118 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0616 10:43:30.772735  126118 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0616 10:43:30.772703  126118 addons.go:502] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volumesnapshots:false yakd:false]
I0616 10:43:30.782442  126118 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0616 10:43:30.782457  126118 addons.go:234] Setting addon storage-provisioner=true in "minikube"
I0616 10:43:30.782474  126118 host.go:66] Checking if "minikube" exists ...
I0616 10:43:30.782550  126118 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0616 10:43:30.782566  126118 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0616 10:43:30.782864  126118 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0616 10:43:30.783261  126118 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0616 10:43:30.787762  126118 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0616 10:43:30.869287  126118 addons.go:234] Setting addon default-storageclass=true in "minikube"
I0616 10:43:30.869306  126118 host.go:66] Checking if "minikube" exists ...
I0616 10:43:30.869579  126118 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0616 10:43:30.905889  126118 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0616 10:43:30.911408  126118 addons.go:426] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0616 10:43:30.911417  126118 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0616 10:43:30.911534  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:30.971042  126118 addons.go:426] installing /etc/kubernetes/addons/storageclass.yaml
I0616 10:43:30.971057  126118 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0616 10:43:30.971795  126118 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0616 10:43:31.034810  126118 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/misterfreeze/.minikube/machines/minikube/id_rsa Username:docker}
I0616 10:43:31.035923  126118 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/misterfreeze/.minikube/machines/minikube/id_rsa Username:docker}
I0616 10:43:31.103836  126118 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0616 10:43:31.103857  126118 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.49.1 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.30.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0616 10:43:31.222674  126118 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0616 10:43:31.268657  126118 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0616 10:43:31.671238  126118 start.go:946] {"host.minikube.internal": 192.168.49.1} host record injected into CoreDNS's ConfigMap
I0616 10:43:31.671961  126118 api_server.go:52] waiting for apiserver process to appear ...
I0616 10:43:31.671993  126118 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0616 10:43:31.891580  126118 api_server.go:72] duration metric: took 1.119024373s to wait for apiserver process to appear ...
I0616 10:43:31.891839  126118 api_server.go:88] waiting for apiserver healthz status ...
I0616 10:43:31.891852  126118 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0616 10:43:31.900313  126118 api_server.go:279] https://192.168.49.2:8443/healthz returned 200:
ok
I0616 10:43:31.901063  126118 api_server.go:141] control plane version: v1.30.0
I0616 10:43:31.901857  126118 api_server.go:131] duration metric: took 9.228498ms to wait for apiserver health ...
I0616 10:43:31.901864  126118 system_pods.go:43] waiting for kube-system pods to appear ...
I0616 10:43:31.912129  126118 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0616 10:43:31.917408  126118 addons.go:505] duration metric: took 1.144703366s for enable addons: enabled=[storage-provisioner default-storageclass]
I0616 10:43:31.917474  126118 system_pods.go:59] 5 kube-system pods found
I0616 10:43:31.917624  126118 system_pods.go:61] "etcd-minikube" [790e0205-125e-45de-b27c-37f5e6df60e3] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0616 10:43:31.917628  126118 system_pods.go:61] "kube-apiserver-minikube" [385d2f48-e93b-4d06-a1bd-561cedbb4804] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0616 10:43:31.917633  126118 system_pods.go:61] "kube-controller-manager-minikube" [bad12a10-960c-405a-8236-4a90fd24f2ee] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0616 10:43:31.917637  126118 system_pods.go:61] "kube-scheduler-minikube" [8a3bf7ad-4935-494f-97fe-fc8620d0ff20] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0616 10:43:31.917639  126118 system_pods.go:61] "storage-provisioner" [f9563fa8-5c34-43af-a69a-5fd53c9c4357] Pending
I0616 10:43:31.917643  126118 system_pods.go:74] duration metric: took 15.77535ms to wait for pod list to return data ...
I0616 10:43:31.917649  126118 kubeadm.go:576] duration metric: took 1.14509665s to wait for: map[apiserver:true system_pods:true]
I0616 10:43:31.917656  126118 node_conditions.go:102] verifying NodePressure condition ...
I0616 10:43:31.923398  126118 node_conditions.go:122] node storage ephemeral capacity is 61583148Ki
I0616 10:43:31.923407  126118 node_conditions.go:123] node cpu capacity is 3
I0616 10:43:31.923413  126118 node_conditions.go:105] duration metric: took 5.754815ms to run NodePressure ...
I0616 10:43:31.923421  126118 start.go:240] waiting for startup goroutines ...
I0616 10:43:32.176206  126118 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0616 10:43:32.176265  126118 start.go:245] waiting for cluster config update ...
I0616 10:43:32.176273  126118 start.go:254] writing updated cluster config ...
I0616 10:43:32.176541  126118 ssh_runner.go:195] Run: rm -f paused
I0616 10:43:32.189564  126118 out.go:177] 💡  kubectl not found. If you need it, try: 'minikube kubectl -- get pods -A'
I0616 10:43:32.194267  126118 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


==> Docker <==
Jun 16 09:00:21 minikube dockerd[1046]: time="2024-06-16T09:00:21.139128251Z" level=info msg="ignoring event" container=8b866e60abd66c500b49c9412c112e8c7bf9b6fd7ffc584429970d54908f954e module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jun 16 09:00:21 minikube dockerd[1046]: time="2024-06-16T09:00:21.398500706Z" level=info msg="ignoring event" container=98e8a0d8c3feb78ddd9fb76da4b4f5767cea73b5b91881b60c1062e9a18e1c09 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jun 16 09:00:21 minikube dockerd[1046]: time="2024-06-16T09:00:21.786451846Z" level=info msg="ignoring event" container=6975feaa16a55d072cf25015b9097520aa3e9d05ea47983869f1280b0c28f88e module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jun 16 09:00:22 minikube cri-dockerd[1258]: time="2024-06-16T09:00:22Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/539f6229d7a501bd1dc353b9ff0102f809ee42f6c57ae7c6e20a9386b9920758/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local home options ndots:5]"
Jun 16 09:00:22 minikube cri-dockerd[1258]: time="2024-06-16T09:00:22Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/44e0b6cded9f72af507356a3f6cc451330327ffeafc8f656b3391fd67473141e/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local home options ndots:5]"
Jun 16 09:00:22 minikube cri-dockerd[1258]: time="2024-06-16T09:00:22Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/6237887e7f89c0e359f7fbfdb66669dee43e8b6b98e2746985250c2ae279a8c2/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local home options ndots:5]"
Jun 16 09:00:24 minikube dockerd[1046]: time="2024-06-16T09:00:24.516886736Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=6df9287ac70f8d3c traceID=64c2f0dd4ea6d91f13dc5d341790ee49
Jun 16 09:00:24 minikube dockerd[1046]: time="2024-06-16T09:00:24.516922254Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:00:26 minikube dockerd[1046]: time="2024-06-16T09:00:26.204383175Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=beb3362508b83f63 traceID=7caba49f9c920484469e6a2845e27016
Jun 16 09:00:26 minikube dockerd[1046]: time="2024-06-16T09:00:26.204465745Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:00:27 minikube dockerd[1046]: time="2024-06-16T09:00:27.927062345Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=9e01275365c50280 traceID=f35e4a8a9e1f790e06ea48c166aaab02
Jun 16 09:00:27 minikube dockerd[1046]: time="2024-06-16T09:00:27.927094508Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:00:38 minikube dockerd[1046]: time="2024-06-16T09:00:38.798030851Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=c53a129abd27c4b3 traceID=f35dd719b438be13825b0eba3c410697
Jun 16 09:00:38 minikube dockerd[1046]: time="2024-06-16T09:00:38.798112181Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:00:41 minikube dockerd[1046]: time="2024-06-16T09:00:41.793974187Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=0a5509ae608ac20a traceID=19f3d5279ea80e7627ec557a747da980
Jun 16 09:00:41 minikube dockerd[1046]: time="2024-06-16T09:00:41.794059067Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:00:43 minikube dockerd[1046]: time="2024-06-16T09:00:43.903735757Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=882bd26a0fe257d8 traceID=4288148abff9914b01212911f106b329
Jun 16 09:00:43 minikube dockerd[1046]: time="2024-06-16T09:00:43.904273161Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:01:03 minikube dockerd[1046]: time="2024-06-16T09:01:03.944738761Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=fc487ad65988073b traceID=a14de39cfbd972f1940591e2881061fb
Jun 16 09:01:03 minikube dockerd[1046]: time="2024-06-16T09:01:03.944814316Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:01:11 minikube dockerd[1046]: time="2024-06-16T09:01:11.739797868Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=b824b93e45e5ec20 traceID=ee630ff28b515424dc42f8fb4ca6536a
Jun 16 09:01:11 minikube dockerd[1046]: time="2024-06-16T09:01:11.739912252Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:01:13 minikube dockerd[1046]: time="2024-06-16T09:01:13.780457818Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=48e9e89714d6eec9 traceID=c39e1fc0d099d17b77718a40a2c781b8
Jun 16 09:01:13 minikube dockerd[1046]: time="2024-06-16T09:01:13.780667367Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:01:58 minikube dockerd[1046]: time="2024-06-16T09:01:58.747519960Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=43adcae8ea14dc15 traceID=a38f197a795407b864b8c5a7c8dce730
Jun 16 09:01:58 minikube dockerd[1046]: time="2024-06-16T09:01:58.747552712Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:02:01 minikube dockerd[1046]: time="2024-06-16T09:02:01.743333398Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=a2a4461fe9f48b87 traceID=703c4ef187c63e24682af9aab996b23e
Jun 16 09:02:01 minikube dockerd[1046]: time="2024-06-16T09:02:01.743826891Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:02:03 minikube dockerd[1046]: time="2024-06-16T09:02:03.481765709Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=3a084e9c2646d186 traceID=6747116a910d4f9fb536ba4fe75fa4ed
Jun 16 09:02:03 minikube dockerd[1046]: time="2024-06-16T09:02:03.481814908Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:03:22 minikube dockerd[1046]: time="2024-06-16T09:03:22.719079704Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=9f8a3c3d8174c286 traceID=51cc98603a3291b1ff53a77bc6c6ac0e
Jun 16 09:03:22 minikube dockerd[1046]: time="2024-06-16T09:03:22.722723541Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:03:24 minikube dockerd[1046]: time="2024-06-16T09:03:24.850419732Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=cebf54cde576ef15 traceID=fa6c1a1ff0c2f8823a6889a3732269e4
Jun 16 09:03:24 minikube dockerd[1046]: time="2024-06-16T09:03:24.851867705Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:03:30 minikube dockerd[1046]: time="2024-06-16T09:03:30.764814221Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=5142c7ad91daf675 traceID=ad8cd7634b0ba072e6a456c878316515
Jun 16 09:03:30 minikube dockerd[1046]: time="2024-06-16T09:03:30.764924950Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:04:05 minikube dockerd[1046]: time="2024-06-16T09:04:05.571842435Z" level=info msg="ignoring event" container=539f6229d7a501bd1dc353b9ff0102f809ee42f6c57ae7c6e20a9386b9920758 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jun 16 09:04:05 minikube dockerd[1046]: time="2024-06-16T09:04:05.813922079Z" level=info msg="ignoring event" container=44e0b6cded9f72af507356a3f6cc451330327ffeafc8f656b3391fd67473141e module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jun 16 09:04:06 minikube cri-dockerd[1258]: time="2024-06-16T09:04:06Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/dc07a1af5071faa80ab703b20a2e0a77d5490c506032d682e7a9bdf7c3496ee1/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local home options ndots:5]"
Jun 16 09:04:06 minikube cri-dockerd[1258]: time="2024-06-16T09:04:06Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/64583c78b6de2569aa58f48b13ec1778666c554174c771ba421153af0e2b0f18/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local home options ndots:5]"
Jun 16 09:04:06 minikube cri-dockerd[1258]: time="2024-06-16T09:04:06Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/fd8f77a1a7b0400504b17aaa140aa880788f60b7cc3f010cf5e87a493662e334/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local home options ndots:5]"
Jun 16 09:04:06 minikube dockerd[1046]: time="2024-06-16T09:04:06.799821248Z" level=info msg="ignoring event" container=6237887e7f89c0e359f7fbfdb66669dee43e8b6b98e2746985250c2ae279a8c2 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jun 16 09:04:08 minikube dockerd[1046]: time="2024-06-16T09:04:08.721882785Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=859e0c381c456d69 traceID=d0ec6bd7b319e542818fb733fa39ca36
Jun 16 09:04:08 minikube dockerd[1046]: time="2024-06-16T09:04:08.723897792Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:04:10 minikube dockerd[1046]: time="2024-06-16T09:04:10.451326346Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=0f193263f475eb02 traceID=f66c5507b051e1700714041512227559
Jun 16 09:04:10 minikube dockerd[1046]: time="2024-06-16T09:04:10.451508215Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:04:12 minikube dockerd[1046]: time="2024-06-16T09:04:12.350901127Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=d64d28393f78501d traceID=1c1ba729420107cb3d256a7de35b9f7b
Jun 16 09:04:12 minikube dockerd[1046]: time="2024-06-16T09:04:12.350936396Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:04:23 minikube dockerd[1046]: time="2024-06-16T09:04:23.825223303Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=d180f54c3b730cfb traceID=6b7b9f12af5390fd585df45bba348206
Jun 16 09:04:23 minikube dockerd[1046]: time="2024-06-16T09:04:23.825318618Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:04:25 minikube dockerd[1046]: time="2024-06-16T09:04:25.552840180Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=a4d438d67a048ec3 traceID=9f66d063a89eccd42061510b0748c2d5
Jun 16 09:04:25 minikube dockerd[1046]: time="2024-06-16T09:04:25.552915937Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:04:27 minikube dockerd[1046]: time="2024-06-16T09:04:27.314242720Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=1a459b09b32b1112 traceID=6deabaa9190e39848f4a5feb19a5e187
Jun 16 09:04:27 minikube dockerd[1046]: time="2024-06-16T09:04:27.314316990Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:04:51 minikube dockerd[1046]: time="2024-06-16T09:04:51.764740421Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=efd651d044817da3 traceID=a227cb3ab577c341f38cfb5885d76a19
Jun 16 09:04:51 minikube dockerd[1046]: time="2024-06-16T09:04:51.764825734Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:04:53 minikube dockerd[1046]: time="2024-06-16T09:04:53.423550120Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=561b358af69ca610 traceID=dff99208cf19224ed572f6b0ef85cf4f
Jun 16 09:04:53 minikube dockerd[1046]: time="2024-06-16T09:04:53.423585424Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 16 09:04:56 minikube dockerd[1046]: time="2024-06-16T09:04:56.622284968Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n" spanID=0052d9d9c09ffd08 traceID=ac85664548174c6a1f43dcccc38bfd0e
Jun 16 09:04:56 minikube dockerd[1046]: time="2024-06-16T09:04:56.622365551Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"


==> container status <==
CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
36e0d9617a2cb       6e38f40d628db       21 minutes ago      Running             storage-provisioner       1                   6ee3cd083082b       storage-provisioner
37e14ede82200       cbb01a7bd410d       21 minutes ago      Running             coredns                   0                   a95a85a932696       coredns-7db6d8ff4d-49q4h
94b840f25d18c       a0bf559e280cf       21 minutes ago      Running             kube-proxy                0                   23e5b28f57ac4       kube-proxy-z69mv
770c444dbc6f6       6e38f40d628db       21 minutes ago      Exited              storage-provisioner       0                   6ee3cd083082b       storage-provisioner
4e0093bbd9353       259c8277fcbbc       22 minutes ago      Running             kube-scheduler            0                   1239c6824383a       kube-scheduler-minikube
2cdb3a17f2fec       c7aad43836fa5       22 minutes ago      Running             kube-controller-manager   0                   1122e8f510ae1       kube-controller-manager-minikube
8294a612d72ea       c42f13656d0b2       22 minutes ago      Running             kube-apiserver            0                   a7f79c791069b       kube-apiserver-minikube
8e4bdc6b3a5eb       3861cfcd7c04c       22 minutes ago      Running             etcd                      0                   22d39515ffb83       etcd-minikube


==> coredns [37e14ede8220] <==
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = 05e3eaddc414b2d71a69b2e2bc6f2681fc1f4d04bcdd3acc1a41457bb7db518208b95ddfc4c9fffedc59c25a8faf458be1af4915a4a3c0d6777cb7a346bc5d86
CoreDNS-1.11.1
linux/amd64, go1.20.7, ae2bbc2
[INFO] 127.0.0.1:45783 - 24072 "HINFO IN 4107380716877090397.6272739863890192306. udp 57 false 512" NXDOMAIN qr,rd,ra 132 0.047153532s
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[516907823]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231 (16-Jun-2024 08:43:45.535) (total time: 30001ms):
Trace[516907823]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30000ms (08:44:15.536)
Trace[516907823]: [30.001431935s] [30.001431935s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: Failed to watch *v1.Namespace: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[1499367505]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231 (16-Jun-2024 08:43:45.535) (total time: 30001ms):
Trace[1499367505]: ---"Objects listed" error:Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30001ms (08:44:15.537)
Trace[1499367505]: [30.00186146s] [30.00186146s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[219854999]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231 (16-Jun-2024 08:43:45.535) (total time: 30002ms):
Trace[219854999]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30002ms (08:44:15.537)
Trace[219854999]: [30.00285155s] [30.00285155s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.27.4/tools/cache/reflector.go:231: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout


==> describe nodes <==
Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=5883c09216182566a63dff4c326a6fc9ed2982ff
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2024_06_16T10_43_30_0700
                    minikube.k8s.io/version=v1.33.1
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Sun, 16 Jun 2024 08:43:26 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Sun, 16 Jun 2024 09:05:28 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Sun, 16 Jun 2024 09:00:31 +0000   Sun, 16 Jun 2024 08:43:25 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Sun, 16 Jun 2024 09:00:31 +0000   Sun, 16 Jun 2024 08:43:25 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Sun, 16 Jun 2024 09:00:31 +0000   Sun, 16 Jun 2024 08:43:25 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Sun, 16 Jun 2024 09:00:31 +0000   Sun, 16 Jun 2024 08:43:26 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                3
  ephemeral-storage:  61583148Ki
  hugepages-2Mi:      0
  memory:             22522348Ki
  pods:               110
Allocatable:
  cpu:                3
  ephemeral-storage:  61583148Ki
  hugepages-2Mi:      0
  memory:             22522348Ki
  pods:               110
System Info:
  Machine ID:                 e5d40480659248b3b71ba018e42570fb
  System UUID:                246242a7-d893-4fcc-987b-5aa573c8809f
  Boot ID:                    93b7eb15-0205-4176-b661-3d727e40a17d
  Kernel Version:             6.8.11-amd64
  OS Image:                   Ubuntu 22.04.4 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://26.1.1
  Kubelet Version:            v1.30.0
  Kube-Proxy Version:         v1.30.0
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (10 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  default                     subnet-manager-d84c64476-lf85x      0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         86s
  default                     subnet-manager-d84c64476-mrrlv      0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         86s
  default                     subnet-manager-d84c64476-slng8      0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         86s
  kube-system                 coredns-7db6d8ff4d-49q4h            100m (3%!)(MISSING)     0 (0%!)(MISSING)      70Mi (0%!)(MISSING)        170Mi (0%!)(MISSING)     21m
  kube-system                 etcd-minikube                       100m (3%!)(MISSING)     0 (0%!)(MISSING)      100Mi (0%!)(MISSING)       0 (0%!)(MISSING)         22m
  kube-system                 kube-apiserver-minikube             250m (8%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         22m
  kube-system                 kube-controller-manager-minikube    200m (6%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         22m
  kube-system                 kube-proxy-z69mv                    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         21m
  kube-system                 kube-scheduler-minikube             100m (3%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         22m
  kube-system                 storage-provisioner                 0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         22m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (25%!)(MISSING)  0 (0%!)(MISSING)
  memory             170Mi (0%!)(MISSING)  170Mi (0%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age                From             Message
  ----    ------                   ----               ----             -------
  Normal  Starting                 21m                kube-proxy       
  Normal  NodeHasSufficientMemory  22m (x8 over 22m)  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    22m (x8 over 22m)  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     22m (x7 over 22m)  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeAllocatableEnforced  22m                kubelet          Updated Node Allocatable limit across pods
  Normal  Starting                 22m                kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  22m                kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    22m                kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     22m                kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeAllocatableEnforced  22m                kubelet          Updated Node Allocatable limit across pods
  Normal  RegisteredNode           21m                node-controller  Node minikube event: Registered Node minikube in Controller


==> dmesg <==
[  +0.000002]  start_secondary+0x11e/0x140
[  +0.000005]  secondary_startup_64_no_verify+0x184/0x18b
[  +0.000006]  </TASK>
[Jun16 05:47] hrtimer: interrupt took 9818155 ns
[Jun16 05:49] e1000 0000:00:03.0 eth0: Reset adapter
[Jun16 05:55] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.000544] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[ +39.854697] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.000061] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[Jun16 06:06] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.000069] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +1.406342] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.000051] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.007203] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.000053] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +3.467452] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.000056] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[Jun16 08:13] watchdog: BUG: soft lockup - CPU#2 stuck for 5048s! [swapper/2:0]
[  +0.000061] Modules linked in: veth xt_conntrack nft_chain_nat xt_MASQUERADE nf_nat nf_conntrack_netlink nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xfrm_user xfrm_algo xt_addrtype nft_compat nf_tables libcrc32c br_netfilter bridge stp llc overlay snd_seq_dummy snd_hrtimer snd_seq snd_seq_device rfkill qrtr vboxsf intel_rapl_msr intel_rapl_common intel_uncore_frequency_common intel_pmc_core intel_vsec pmt_telemetry pmt_class snd_intel8x0 sunrpc rapl snd_ac97_codec ac97_bus snd_pcm pcspkr snd_timer snd joydev soundcore vboxguest ac sg evdev serio_raw binfmt_misc loop efi_pstore dm_mod configfs nfnetlink ip_tables x_tables autofs4 ext4 crc16 mbcache jbd2 crc32c_generic hid_generic usbhid hid crc32_pclmul crc32c_intel sd_mod t10_pi crc64_rocksoft_generic vmwgfx crc64_rocksoft crc_t10dif crct10dif_generic crct10dif_pclmul sr_mod crc64 crct10dif_common cdrom drm_ttm_helper ghash_clmulni_intel ttm ata_generic drm_kms_helper ohci_pci sha512_ssse3 ohci_hcd ehci_pci ahci sha512_generic ata_piix ehci_hcd libahci drm sha256_ssse3
[  +0.000093]  usbcore libata e1000 psmouse sha1_ssse3 scsi_mod video usb_common i2c_piix4 scsi_common battery wmi button aesni_intel crypto_simd cryptd
[  +0.000052] CPU: 2 PID: 0 Comm: swapper/2 Tainted: G             L     6.8.11-amd64 #1  Kali 6.8.11-1kali2
[  +0.000113] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
[  +0.000002] RIP: 0010:pv_native_safe_halt+0xf/0x20
[  +0.000315] Code: 22 d7 c3 cc cc cc cc 0f 1f 40 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa 66 90 0f 00 2d b5 67 3e 00 fb f4 <c3> cc cc cc cc 66 66 2e 0f 1f 84 00 00 00 00 00 90 90 90 90 90 90
[  +0.000003] RSP: 0018:ffffaa0cc00b3ed8 EFLAGS: 00010242
[  +0.000042] RAX: 0000000000000002 RBX: 0000000000000002 RCX: 0000000000000000
[  +0.000032] RDX: 4000000000000000 RSI: 0000000000000086 RDI: 0000000003aa3344
[  +0.000036] RBP: ffff96dc003c8000 R08: 0000000000000001 R09: 0000000000000000
[  +0.000001] R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000
[  +0.000002] R13: 0000000000000000 R14: ffff96dc003c8000 R15: 0000000000000000
[  +0.000003] FS:  0000000000000000(0000) GS:ffff96e087f00000(0000) knlGS:0000000000000000
[  +0.000003] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  +0.000002] CR2: 000055ae15f01aa8 CR3: 000000010483e004 CR4: 00000000000306f0
[  +0.000004] Call Trace:
[  +0.000109]  <IRQ>
[  +0.000006]  ? watchdog_timer_fn+0x1e6/0x270
[  +0.000207]  ? __pfx_watchdog_timer_fn+0x10/0x10
[  +0.000004]  ? __hrtimer_run_queues+0x10f/0x2b0
[  +0.000090]  ? hrtimer_interrupt+0xf8/0x230
[  +0.000004]  ? __sysvec_apic_timer_interrupt+0x4d/0x140
[  +0.000147]  ? sysvec_apic_timer_interrupt+0x6d/0x90
[  +0.000004]  </IRQ>
[  +0.000002]  <TASK>
[  +0.000001]  ? asm_sysvec_apic_timer_interrupt+0x1a/0x20
[  +0.000094]  ? pv_native_safe_halt+0xf/0x20
[  +0.000003]  default_idle+0x9/0x20
[  +0.000031]  default_idle_call+0x2c/0xe0
[  +0.000006]  do_idle+0x226/0x270
[  +0.000195]  cpu_startup_entry+0x2a/0x30
[  +0.000005]  start_secondary+0x11e/0x140
[  +0.000121]  secondary_startup_64_no_verify+0x184/0x18b
[  +0.000188]  </TASK>
[  +6.524524] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.000118] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.826348] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.000062] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.010825] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.000080] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +2.777977] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.
[  +0.000143] [drm:vmw_msg_ioctl [vmwgfx]] *ERROR* Failed to open channel.


==> etcd [8e4bdc6b3a5e] <==
{"level":"warn","ts":"2024-06-16T08:43:24.439298Z","caller":"embed/config.go:679","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-06-16T08:43:24.439427Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"warn","ts":"2024-06-16T08:43:24.439478Z","caller":"embed/config.go:679","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-06-16T08:43:24.439484Z","caller":"embed/etcd.go:127","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-06-16T08:43:24.439494Z","caller":"embed/etcd.go:494","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-06-16T08:43:24.440237Z","caller":"embed/etcd.go:135","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2024-06-16T08:43:24.44085Z","caller":"embed/etcd.go:308","msg":"starting an etcd server","etcd-version":"3.5.12","git-sha":"e7b3bb6cc","go-version":"go1.20.13","go-os":"linux","go-arch":"amd64","max-cpu-set":3,"max-cpu-available":3,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2024-06-16T08:43:24.447368Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"6.366673ms"}
{"level":"info","ts":"2024-06-16T08:43:24.479786Z","caller":"etcdserver/raft.go:495","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2024-06-16T08:43:24.479888Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2024-06-16T08:43:24.480023Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2024-06-16T08:43:24.480034Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2024-06-16T08:43:24.480038Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2024-06-16T08:43:24.48006Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2024-06-16T08:43:24.49039Z","caller":"auth/store.go:1241","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2024-06-16T08:43:24.503601Z","caller":"mvcc/kvstore.go:407","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2024-06-16T08:43:24.507018Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2024-06-16T08:43:24.513452Z","caller":"etcdserver/server.go:860","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.12","cluster-version":"to_be_decided"}
{"level":"info","ts":"2024-06-16T08:43:24.514766Z","caller":"etcdserver/server.go:744","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2024-06-16T08:43:24.516917Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2024-06-16T08:43:24.518773Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2024-06-16T08:43:24.518798Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2024-06-16T08:43:24.521047Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2024-06-16T08:43:24.523438Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-06-16T08:43:24.54046Z","caller":"embed/etcd.go:726","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-06-16T08:43:24.543043Z","caller":"embed/etcd.go:597","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-06-16T08:43:24.543062Z","caller":"embed/etcd.go:569","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-06-16T08:43:24.548179Z","caller":"embed/etcd.go:277","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2024-06-16T08:43:24.548839Z","caller":"embed/etcd.go:857","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2024-06-16T08:43:25.003942Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2024-06-16T08:43:25.009067Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2024-06-16T08:43:25.010164Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2024-06-16T08:43:25.010223Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2024-06-16T08:43:25.010232Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-06-16T08:43:25.01123Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2024-06-16T08:43:25.011488Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-06-16T08:43:25.015951Z","caller":"etcdserver/server.go:2578","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2024-06-16T08:43:25.017469Z","caller":"etcdserver/server.go:2068","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2024-06-16T08:43:25.017534Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-06-16T08:43:25.017792Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-06-16T08:43:25.019435Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2024-06-16T08:43:25.019447Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2024-06-16T08:43:25.020288Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2024-06-16T08:43:25.020368Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2024-06-16T08:43:25.020384Z","caller":"etcdserver/server.go:2602","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2024-06-16T08:43:25.020614Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2024-06-16T08:43:25.029389Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2024-06-16T08:53:25.086684Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":635}
{"level":"info","ts":"2024-06-16T08:53:25.101208Z","caller":"mvcc/kvstore_compaction.go:68","msg":"finished scheduled compaction","compact-revision":635,"took":"13.527708ms","hash":1859282025,"current-db-size-bytes":1687552,"current-db-size":"1.7 MB","current-db-size-in-use-bytes":1687552,"current-db-size-in-use":"1.7 MB"}
{"level":"info","ts":"2024-06-16T08:53:25.101418Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1859282025,"revision":635,"compact-revision":-1}
{"level":"info","ts":"2024-06-16T08:58:25.098606Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1002}
{"level":"info","ts":"2024-06-16T08:58:25.108661Z","caller":"mvcc/kvstore_compaction.go:68","msg":"finished scheduled compaction","compact-revision":1002,"took":"9.457911ms","hash":2615721725,"current-db-size-bytes":1687552,"current-db-size":"1.7 MB","current-db-size-in-use-bytes":1372160,"current-db-size-in-use":"1.4 MB"}
{"level":"info","ts":"2024-06-16T08:58:25.108778Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2615721725,"revision":1002,"compact-revision":635}
{"level":"info","ts":"2024-06-16T09:00:15.953346Z","caller":"traceutil/trace.go:171","msg":"trace[314533643] transaction","detail":"{read_only:false; response_revision:1344; number_of_response:1; }","duration":"546.9005ms","start":"2024-06-16T09:00:15.406429Z","end":"2024-06-16T09:00:15.953329Z","steps":["trace[314533643] 'process raft request'  (duration: 546.766879ms)"],"step_count":1}
{"level":"warn","ts":"2024-06-16T09:00:15.99166Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2024-06-16T09:00:15.406418Z","time spent":"583.920565ms","remote":"127.0.0.1:44242","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":585,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" mod_revision:1343 > success:<request_put:<key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" value_size:512 >> failure:<request_range:<key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" > >"}
{"level":"info","ts":"2024-06-16T09:03:25.11481Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1255}
{"level":"info","ts":"2024-06-16T09:03:25.120522Z","caller":"mvcc/kvstore_compaction.go:68","msg":"finished scheduled compaction","compact-revision":1255,"took":"5.021323ms","hash":2202234155,"current-db-size-bytes":1687552,"current-db-size":"1.7 MB","current-db-size-in-use-bytes":1486848,"current-db-size-in-use":"1.5 MB"}
{"level":"info","ts":"2024-06-16T09:03:25.120597Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2202234155,"revision":1255,"compact-revision":1002}


==> kernel <==
 09:05:32 up  8:45,  0 users,  load average: 1.56, 2.64, 2.44
Linux minikube 6.8.11-amd64 #1 SMP PREEMPT_DYNAMIC Kali 6.8.11-1kali2 (2024-05-30) x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.4 LTS"


==> kube-apiserver [8294a612d72e] <==
I0616 08:43:26.566599       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0616 08:43:26.566605       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0616 08:43:26.566610       1 crd_finalizer.go:266] Starting CRDFinalizer
I0616 08:43:26.572696       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0616 08:43:26.572711       1 shared_informer.go:313] Waiting for caches to sync for cluster_authentication_trust_controller
I0616 08:43:26.572811       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0616 08:43:26.573049       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0616 08:43:26.573788       1 apf_controller.go:374] Starting API Priority and Fairness config controller
I0616 08:43:26.574661       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0616 08:43:26.576888       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0616 08:43:26.605346       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0616 08:43:26.729676       1 shared_informer.go:320] Caches are synced for node_authorizer
I0616 08:43:26.735937       1 shared_informer.go:320] Caches are synced for *generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]
I0616 08:43:26.735954       1 policy_source.go:224] refreshing policies
I0616 08:43:26.764087       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0616 08:43:26.766520       1 shared_informer.go:320] Caches are synced for crd-autoregister
I0616 08:43:26.764464       1 shared_informer.go:320] Caches are synced for configmaps
I0616 08:43:26.768221       1 controller.go:615] quota admission added evaluator for: namespaces
I0616 08:43:26.768272       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0616 08:43:26.768571       1 handler_discovery.go:447] Starting ResourceDiscoveryManager
I0616 08:43:26.768637       1 aggregator.go:165] initial CRD sync complete...
I0616 08:43:26.768644       1 autoregister_controller.go:141] Starting autoregister controller
I0616 08:43:26.768647       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0616 08:43:26.768652       1 cache.go:39] Caches are synced for autoregister controller
I0616 08:43:26.772816       1 shared_informer.go:320] Caches are synced for cluster_authentication_trust_controller
I0616 08:43:26.775918       1 apf_controller.go:379] Running API Priority and Fairness config worker
I0616 08:43:26.777915       1 apf_controller.go:382] Running API Priority and Fairness periodic rebalancing process
I0616 08:43:26.831116       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
E0616 08:43:26.950778       1 queueset.go:474] "Overflow" err="queueset::currentR overflow" QS="system" when="2024-06-16 08:43:26.950766538" prevR="0.02699461ss" incrR="184467440737.09551234ss" currentR="0.02699079ss"
I0616 08:43:27.585201       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0616 08:43:27.590580       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0616 08:43:27.592628       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0616 08:43:28.542658       1 controller.go:615] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0616 08:43:28.647774       1 controller.go:615] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0616 08:43:28.744756       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0616 08:43:28.758681       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0616 08:43:28.759979       1 controller.go:615] quota admission added evaluator for: endpoints
I0616 08:43:28.773730       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0616 08:43:29.692337       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I0616 08:43:29.922144       1 controller.go:615] quota admission added evaluator for: deployments.apps
I0616 08:43:29.958060       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0616 08:43:29.989068       1 controller.go:615] quota admission added evaluator for: daemonsets.apps
I0616 08:43:43.646218       1 controller.go:615] quota admission added evaluator for: controllerrevisions.apps
I0616 08:43:43.846247       1 controller.go:615] quota admission added evaluator for: replicasets.apps
I0616 08:47:22.131835       1 alloc.go:330] "allocated clusterIPs" service="default/subnet-manager" clusterIPs={"IPv4":"10.100.229.118"}
E0616 08:51:06.229574       1 queueset.go:474] "Overflow" err="queueset::currentR overflow" QS="workload-high" when="2024-06-16 08:51:06.229551811" prevR="1.37279163ss" incrR="184467440737.09551053ss" currentR="1.37278600ss"
I0616 09:00:15.992244       1 trace.go:236] Trace[380531098]: "Update" accept:application/json, */*,audit-id:cd966b8c-c657-4721-8c97-a77f7a8dffe1,client:192.168.49.2,api-group:,api-version:v1,name:k8s.io-minikube-hostpath,subresource:,namespace:kube-system,protocol:HTTP/2.0,resource:endpoints,scope:resource,url:/api/v1/namespaces/kube-system/endpoints/k8s.io-minikube-hostpath,user-agent:storage-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format,verb:PUT (16-Jun-2024 09:00:15.405) (total time: 587ms):
Trace[380531098]: ["GuaranteedUpdate etcd3" audit-id:cd966b8c-c657-4721-8c97-a77f7a8dffe1,key:/services/endpoints/kube-system/k8s.io-minikube-hostpath,type:*core.Endpoints,resource:endpoints 586ms (09:00:15.405)
Trace[380531098]:  ---"Txn call completed" 586ms (09:00:15.992)]
Trace[380531098]: [587.040677ms] [587.040677ms] END
I0616 09:00:54.998086       1 trace.go:236] Trace[463092594]: "Get" accept:application/vnd.kubernetes.protobuf,application/json,audit-id:7026eea9-5c54-4442-b65e-3fcc78e80876,client:192.168.49.2,api-group:,api-version:v1,name:subnet-manager-d84c64476-q862q,subresource:,namespace:default,protocol:HTTP/2.0,resource:pods,scope:resource,url:/api/v1/namespaces/default/pods/subnet-manager-d84c64476-q862q,user-agent:kubelet/v1.30.0 (linux/amd64) kubernetes/7c48c2b,verb:GET (16-Jun-2024 09:00:54.082) (total time: 915ms):
Trace[463092594]: ---"About to write a response" 915ms (09:00:54.997)
Trace[463092594]: [915.982092ms] [915.982092ms] END
I0616 09:01:52.951447       1 trace.go:236] Trace[1723030123]: "Get" accept:application/json, */*,audit-id:19f461f6-9868-48bd-b4e4-b50735f7c0be,client:192.168.49.2,api-group:,api-version:v1,name:k8s.io-minikube-hostpath,subresource:,namespace:kube-system,protocol:HTTP/2.0,resource:endpoints,scope:resource,url:/api/v1/namespaces/kube-system/endpoints/k8s.io-minikube-hostpath,user-agent:storage-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format,verb:GET (16-Jun-2024 09:01:51.958) (total time: 993ms):
Trace[1723030123]: ---"About to write a response" 993ms (09:01:52.951)
Trace[1723030123]: [993.244198ms] [993.244198ms] END
I0616 09:01:52.951976       1 trace.go:236] Trace[1710976095]: "Update" accept:application/vnd.kubernetes.protobuf, */*,audit-id:9c1b700d-7e41-4bf1-a1b0-470189c8da5d,client:127.0.0.1,api-group:coordination.k8s.io,api-version:v1,name:apiserver-eqt674mfxb4j56mrjjkoe7b7ii,subresource:,namespace:kube-system,protocol:HTTP/2.0,resource:leases,scope:resource,url:/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/apiserver-eqt674mfxb4j56mrjjkoe7b7ii,user-agent:kube-apiserver/v1.30.0 (linux/amd64) kubernetes/7c48c2b,verb:PUT (16-Jun-2024 09:01:51.851) (total time: 1100ms):
Trace[1710976095]: ["GuaranteedUpdate etcd3" audit-id:9c1b700d-7e41-4bf1-a1b0-470189c8da5d,key:/leases/kube-system/apiserver-eqt674mfxb4j56mrjjkoe7b7ii,type:*coordination.Lease,resource:leases.coordination.k8s.io 1100ms (09:01:51.851)
Trace[1710976095]:  ---"Txn call completed" 1100ms (09:01:52.951)]
Trace[1710976095]: [1.100835726s] [1.100835726s] END


==> kube-controller-manager [2cdb3a17f2fe] <==
I0616 09:01:12.119688       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="487.899µs"
I0616 09:01:16.126628       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="31.351µs"
I0616 09:01:24.131360       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="27.226µs"
I0616 09:01:25.104224       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="26.505µs"
I0616 09:01:29.103406       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="102.465µs"
I0616 09:01:37.156766       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="276.316µs"
I0616 09:01:37.223534       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="85.561µs"
I0616 09:02:13.106315       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="27.59µs"
I0616 09:02:16.105853       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="33.798µs"
I0616 09:02:19.113789       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="28.259µs"
I0616 09:02:27.137556       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="29.518µs"
I0616 09:02:27.217983       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="27.859µs"
I0616 09:02:34.155557       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="35.184µs"
I0616 09:03:35.096761       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="26.336µs"
I0616 09:03:37.130054       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="155.015µs"
I0616 09:03:45.099572       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="40.173µs"
I0616 09:03:46.103838       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="25.451µs"
I0616 09:03:50.100956       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="33.889µs"
I0616 09:03:57.098943       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="25.995µs"
I0616 09:04:05.261917       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="100.60869ms"
I0616 09:04:05.294207       1 endpointslice_controller.go:311] "Error syncing endpoint slices for service, retrying" logger="endpointslice-controller" key="default/subnet-manager" err="EndpointSlice informer cache is out of date"
I0616 09:04:05.370437       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="107.845483ms"
I0616 09:04:05.396754       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="25.14149ms"
I0616 09:04:05.397746       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="27.309µs"
I0616 09:04:05.397808       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="10.453µs"
I0616 09:04:05.420379       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="30.616µs"
I0616 09:04:05.748593       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="27.583µs"
I0616 09:04:06.074208       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="34.031µs"
I0616 09:04:06.487215       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="23.087µs"
I0616 09:04:06.504816       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="46.205µs"
I0616 09:04:06.536037       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="25.052µs"
I0616 09:04:06.556654       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="21.41µs"
I0616 09:04:06.560069       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="24.201µs"
I0616 09:04:06.983000       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="33.697µs"
I0616 09:04:07.525237       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="34.271µs"
I0616 09:04:07.548483       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="30.272µs"
I0616 09:04:07.579334       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="23.146µs"
I0616 09:04:07.590847       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="55.6µs"
I0616 09:04:07.602263       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="26.01µs"
I0616 09:04:07.617241       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="161.958µs"
I0616 09:04:07.632172       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="31.058µs"
I0616 09:04:07.640684       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="23.903µs"
I0616 09:04:09.654197       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="20.141µs"
I0616 09:04:10.745166       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="42.145µs"
I0616 09:04:12.716346       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="26.743µs"
I0616 09:04:22.112112       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="62.92µs"
I0616 09:04:22.209206       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="2.101704ms"
I0616 09:04:25.108259       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="45.955µs"
I0616 09:04:37.098768       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="30.862µs"
I0616 09:04:39.122565       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="28.756µs"
I0616 09:04:41.105112       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="28.016µs"
I0616 09:04:50.107457       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="27.003µs"
I0616 09:04:51.097517       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="54.023µs"
I0616 09:04:54.994312       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="53.629µs"
I0616 09:05:05.094431       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="27.049µs"
I0616 09:05:05.110847       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="38.891µs"
I0616 09:05:10.105054       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="27.238µs"
I0616 09:05:18.122693       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="191.612µs"
I0616 09:05:20.109235       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="26.764µs"
I0616 09:05:25.100722       1 replica_set.go:676] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/subnet-manager-d84c64476" duration="27.651µs"


==> kube-proxy [94b840f25d18] <==
I0616 08:43:44.998648       1 server_linux.go:69] "Using iptables proxy"
I0616 08:43:45.011934       1 server.go:1062] "Successfully retrieved node IP(s)" IPs=["192.168.49.2"]
I0616 08:43:45.102666       1 server.go:659] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0616 08:43:45.102698       1 server_linux.go:165] "Using iptables Proxier"
I0616 08:43:45.108643       1 server_linux.go:511] "Detect-local-mode set to ClusterCIDR, but no cluster CIDR for family" ipFamily="IPv6"
I0616 08:43:45.108699       1 server_linux.go:528] "Defaulting to no-op detect-local"
I0616 08:43:45.108713       1 proxier.go:243] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0616 08:43:45.109061       1 server.go:872] "Version info" version="v1.30.0"
I0616 08:43:45.109077       1 server.go:874] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0616 08:43:45.112772       1 config.go:192] "Starting service config controller"
I0616 08:43:45.112833       1 shared_informer.go:313] Waiting for caches to sync for service config
I0616 08:43:45.113049       1 config.go:101] "Starting endpoint slice config controller"
I0616 08:43:45.113104       1 shared_informer.go:313] Waiting for caches to sync for endpoint slice config
I0616 08:43:45.115420       1 config.go:319] "Starting node config controller"
I0616 08:43:45.115471       1 shared_informer.go:313] Waiting for caches to sync for node config
I0616 08:43:45.213015       1 shared_informer.go:320] Caches are synced for service config
I0616 08:43:45.215646       1 shared_informer.go:320] Caches are synced for endpoint slice config
I0616 08:43:45.215747       1 shared_informer.go:320] Caches are synced for node config


==> kube-scheduler [4e0093bbd935] <==
I0616 08:43:26.688932       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0616 08:43:26.696876       1 reflector.go:547] runtime/asm_amd64.s:1695: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0616 08:43:26.697065       1 reflector.go:150] runtime/asm_amd64.s:1695: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0616 08:43:26.697961       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0616 08:43:26.698021       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0616 08:43:26.698395       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0616 08:43:26.698578       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0616 08:43:26.698641       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0616 08:43:26.699280       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0616 08:43:26.699325       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0616 08:43:26.699401       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0616 08:43:26.699494       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0616 08:43:26.698568       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0616 08:43:26.700110       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0616 08:43:26.700148       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0616 08:43:26.700510       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0616 08:43:26.700554       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0616 08:43:26.700575       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0616 08:43:26.700811       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0616 08:43:26.701157       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0616 08:43:26.701189       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0616 08:43:26.702531       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0616 08:43:26.702658       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0616 08:43:26.702666       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0616 08:43:26.702672       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0616 08:43:26.702676       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0616 08:43:26.702681       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0616 08:43:26.702685       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0616 08:43:26.703508       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0616 08:43:26.703883       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0616 08:43:26.704096       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0616 08:43:27.530748       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0616 08:43:27.530828       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0616 08:43:27.546835       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0616 08:43:27.547118       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0616 08:43:27.597916       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0616 08:43:27.598779       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0616 08:43:27.692968       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0616 08:43:27.692997       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0616 08:43:27.782797       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0616 08:43:27.782890       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0616 08:43:27.814091       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0616 08:43:27.814197       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0616 08:43:27.814299       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0616 08:43:27.814311       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0616 08:43:27.843546       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0616 08:43:27.843618       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0616 08:43:27.904304       1 reflector.go:547] runtime/asm_amd64.s:1695: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0616 08:43:27.904532       1 reflector.go:150] runtime/asm_amd64.s:1695: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0616 08:43:27.988959       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0616 08:43:27.989044       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0616 08:43:28.081994       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0616 08:43:28.082017       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0616 08:43:28.105562       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0616 08:43:28.105635       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0616 08:43:28.230198       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0616 08:43:28.230299       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0616 08:43:28.240572       1 reflector.go:547] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0616 08:43:28.240641       1 reflector.go:150] k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
I0616 08:43:30.492040       1 shared_informer.go:320] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file


==> kubelet <==
Jun 16 09:04:05 minikube kubelet[2065]: I0616 09:04:05.907787    2065 reconciler_common.go:289] "Volume detached for volume \"kube-api-access-px98d\" (UniqueName: \"kubernetes.io/projected/2d4d15b1-4e15-4268-ab9b-c3f4c9cc836b-kube-api-access-px98d\") on node \"minikube\" DevicePath \"\""
Jun 16 09:04:06 minikube kubelet[2065]: I0616 09:04:06.114992    2065 reconciler_common.go:161] "operationExecutor.UnmountVolume started for volume \"kube-api-access-wktxs\" (UniqueName: \"kubernetes.io/projected/8b9783f0-ec38-4220-b87c-1bfd2d72bc08-kube-api-access-wktxs\") pod \"8b9783f0-ec38-4220-b87c-1bfd2d72bc08\" (UID: \"8b9783f0-ec38-4220-b87c-1bfd2d72bc08\") "
Jun 16 09:04:06 minikube kubelet[2065]: I0616 09:04:06.122441    2065 operation_generator.go:887] UnmountVolume.TearDown succeeded for volume "kubernetes.io/projected/8b9783f0-ec38-4220-b87c-1bfd2d72bc08-kube-api-access-wktxs" (OuterVolumeSpecName: "kube-api-access-wktxs") pod "8b9783f0-ec38-4220-b87c-1bfd2d72bc08" (UID: "8b9783f0-ec38-4220-b87c-1bfd2d72bc08"). InnerVolumeSpecName "kube-api-access-wktxs". PluginName "kubernetes.io/projected", VolumeGidValue ""
Jun 16 09:04:06 minikube kubelet[2065]: I0616 09:04:06.217657    2065 reconciler_common.go:289] "Volume detached for volume \"kube-api-access-wktxs\" (UniqueName: \"kubernetes.io/projected/8b9783f0-ec38-4220-b87c-1bfd2d72bc08-kube-api-access-wktxs\") on node \"minikube\" DevicePath \"\""
Jun 16 09:04:06 minikube kubelet[2065]: I0616 09:04:06.432622    2065 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="64583c78b6de2569aa58f48b13ec1778666c554174c771ba421153af0e2b0f18"
Jun 16 09:04:07 minikube kubelet[2065]: I0616 09:04:07.032979    2065 reconciler_common.go:161] "operationExecutor.UnmountVolume started for volume \"kube-api-access-xrs9q\" (UniqueName: \"kubernetes.io/projected/1a072dbf-5971-4bf8-bc34-deba3cf59572-kube-api-access-xrs9q\") pod \"1a072dbf-5971-4bf8-bc34-deba3cf59572\" (UID: \"1a072dbf-5971-4bf8-bc34-deba3cf59572\") "
Jun 16 09:04:07 minikube kubelet[2065]: I0616 09:04:07.051230    2065 operation_generator.go:887] UnmountVolume.TearDown succeeded for volume "kubernetes.io/projected/1a072dbf-5971-4bf8-bc34-deba3cf59572-kube-api-access-xrs9q" (OuterVolumeSpecName: "kube-api-access-xrs9q") pod "1a072dbf-5971-4bf8-bc34-deba3cf59572" (UID: "1a072dbf-5971-4bf8-bc34-deba3cf59572"). InnerVolumeSpecName "kube-api-access-xrs9q". PluginName "kubernetes.io/projected", VolumeGidValue ""
Jun 16 09:04:07 minikube kubelet[2065]: I0616 09:04:07.138625    2065 reconciler_common.go:289] "Volume detached for volume \"kube-api-access-xrs9q\" (UniqueName: \"kubernetes.io/projected/1a072dbf-5971-4bf8-bc34-deba3cf59572-kube-api-access-xrs9q\") on node \"minikube\" DevicePath \"\""
Jun 16 09:04:08 minikube kubelet[2065]: I0616 09:04:08.089389    2065 kubelet_volumes.go:163] "Cleaned up orphaned pod volumes dir" podUID="1a072dbf-5971-4bf8-bc34-deba3cf59572" path="/var/lib/kubelet/pods/1a072dbf-5971-4bf8-bc34-deba3cf59572/volumes"
Jun 16 09:04:08 minikube kubelet[2065]: I0616 09:04:08.089611    2065 kubelet_volumes.go:163] "Cleaned up orphaned pod volumes dir" podUID="2d4d15b1-4e15-4268-ab9b-c3f4c9cc836b" path="/var/lib/kubelet/pods/2d4d15b1-4e15-4268-ab9b-c3f4c9cc836b/volumes"
Jun 16 09:04:08 minikube kubelet[2065]: I0616 09:04:08.089741    2065 kubelet_volumes.go:163] "Cleaned up orphaned pod volumes dir" podUID="8b9783f0-ec38-4220-b87c-1bfd2d72bc08" path="/var/lib/kubelet/pods/8b9783f0-ec38-4220-b87c-1bfd2d72bc08/volumes"
Jun 16 09:04:08 minikube kubelet[2065]: E0616 09:04:08.733051    2065 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:08 minikube kubelet[2065]: E0616 09:04:08.733092    2065 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:08 minikube kubelet[2065]: E0616 09:04:08.733277    2065 kuberuntime_manager.go:1256] container &Container{Name:subnet-manager,Image:subnet-manager:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hrbqb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod subnet-manager-d84c64476-lf85x_default(e4b1bcec-249c-44ff-8528-db19e74a8c36): ErrImagePull: Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jun 16 09:04:08 minikube kubelet[2065]: E0616 09:04:08.733298    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ErrImagePull: \"Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/subnet-manager-d84c64476-lf85x" podUID="e4b1bcec-249c-44ff-8528-db19e74a8c36"
Jun 16 09:04:09 minikube kubelet[2065]: E0616 09:04:09.636862    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-lf85x" podUID="e4b1bcec-249c-44ff-8528-db19e74a8c36"
Jun 16 09:04:10 minikube kubelet[2065]: E0616 09:04:10.465366    2065 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:10 minikube kubelet[2065]: E0616 09:04:10.465405    2065 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:10 minikube kubelet[2065]: E0616 09:04:10.465634    2065 kuberuntime_manager.go:1256] container &Container{Name:subnet-manager,Image:subnet-manager:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h7xs9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod subnet-manager-d84c64476-slng8_default(d768b9c4-dfde-4651-9205-03cc13af2347): ErrImagePull: Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jun 16 09:04:10 minikube kubelet[2065]: E0616 09:04:10.465682    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ErrImagePull: \"Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/subnet-manager-d84c64476-slng8" podUID="d768b9c4-dfde-4651-9205-03cc13af2347"
Jun 16 09:04:10 minikube kubelet[2065]: E0616 09:04:10.709536    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-slng8" podUID="d768b9c4-dfde-4651-9205-03cc13af2347"
Jun 16 09:04:12 minikube kubelet[2065]: E0616 09:04:12.360594    2065 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:12 minikube kubelet[2065]: E0616 09:04:12.360631    2065 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:12 minikube kubelet[2065]: E0616 09:04:12.360690    2065 kuberuntime_manager.go:1256] container &Container{Name:subnet-manager,Image:subnet-manager:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dqsr5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod subnet-manager-d84c64476-mrrlv_default(8c6adea0-9a76-437f-80c7-5c1e18cb7a8f): ErrImagePull: Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jun 16 09:04:12 minikube kubelet[2065]: E0616 09:04:12.360715    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ErrImagePull: \"Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/subnet-manager-d84c64476-mrrlv" podUID="8c6adea0-9a76-437f-80c7-5c1e18cb7a8f"
Jun 16 09:04:12 minikube kubelet[2065]: E0616 09:04:12.701748    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-mrrlv" podUID="8c6adea0-9a76-437f-80c7-5c1e18cb7a8f"
Jun 16 09:04:23 minikube kubelet[2065]: E0616 09:04:23.843558    2065 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:23 minikube kubelet[2065]: E0616 09:04:23.843924    2065 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:23 minikube kubelet[2065]: E0616 09:04:23.844080    2065 kuberuntime_manager.go:1256] container &Container{Name:subnet-manager,Image:subnet-manager:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h7xs9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod subnet-manager-d84c64476-slng8_default(d768b9c4-dfde-4651-9205-03cc13af2347): ErrImagePull: Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jun 16 09:04:23 minikube kubelet[2065]: E0616 09:04:23.844101    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ErrImagePull: \"Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/subnet-manager-d84c64476-slng8" podUID="d768b9c4-dfde-4651-9205-03cc13af2347"
Jun 16 09:04:25 minikube kubelet[2065]: E0616 09:04:25.559763    2065 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:25 minikube kubelet[2065]: E0616 09:04:25.559847    2065 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:25 minikube kubelet[2065]: E0616 09:04:25.559982    2065 kuberuntime_manager.go:1256] container &Container{Name:subnet-manager,Image:subnet-manager:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hrbqb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod subnet-manager-d84c64476-lf85x_default(e4b1bcec-249c-44ff-8528-db19e74a8c36): ErrImagePull: Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jun 16 09:04:25 minikube kubelet[2065]: E0616 09:04:25.560002    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ErrImagePull: \"Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/subnet-manager-d84c64476-lf85x" podUID="e4b1bcec-249c-44ff-8528-db19e74a8c36"
Jun 16 09:04:27 minikube kubelet[2065]: E0616 09:04:27.321195    2065 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:27 minikube kubelet[2065]: E0616 09:04:27.321235    2065 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:27 minikube kubelet[2065]: E0616 09:04:27.321289    2065 kuberuntime_manager.go:1256] container &Container{Name:subnet-manager,Image:subnet-manager:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dqsr5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod subnet-manager-d84c64476-mrrlv_default(8c6adea0-9a76-437f-80c7-5c1e18cb7a8f): ErrImagePull: Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jun 16 09:04:27 minikube kubelet[2065]: E0616 09:04:27.321308    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ErrImagePull: \"Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/subnet-manager-d84c64476-mrrlv" podUID="8c6adea0-9a76-437f-80c7-5c1e18cb7a8f"
Jun 16 09:04:37 minikube kubelet[2065]: E0616 09:04:37.085889    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-slng8" podUID="d768b9c4-dfde-4651-9205-03cc13af2347"
Jun 16 09:04:39 minikube kubelet[2065]: E0616 09:04:39.092246    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-lf85x" podUID="e4b1bcec-249c-44ff-8528-db19e74a8c36"
Jun 16 09:04:41 minikube kubelet[2065]: E0616 09:04:41.089149    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-mrrlv" podUID="8c6adea0-9a76-437f-80c7-5c1e18cb7a8f"
Jun 16 09:04:51 minikube kubelet[2065]: E0616 09:04:51.771463    2065 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:51 minikube kubelet[2065]: E0616 09:04:51.771519    2065 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:51 minikube kubelet[2065]: E0616 09:04:51.771881    2065 kuberuntime_manager.go:1256] container &Container{Name:subnet-manager,Image:subnet-manager:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h7xs9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod subnet-manager-d84c64476-slng8_default(d768b9c4-dfde-4651-9205-03cc13af2347): ErrImagePull: Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jun 16 09:04:51 minikube kubelet[2065]: E0616 09:04:51.771921    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ErrImagePull: \"Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/subnet-manager-d84c64476-slng8" podUID="d768b9c4-dfde-4651-9205-03cc13af2347"
Jun 16 09:04:53 minikube kubelet[2065]: E0616 09:04:53.432414    2065 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:53 minikube kubelet[2065]: E0616 09:04:53.432453    2065 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:53 minikube kubelet[2065]: E0616 09:04:53.432512    2065 kuberuntime_manager.go:1256] container &Container{Name:subnet-manager,Image:subnet-manager:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hrbqb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod subnet-manager-d84c64476-lf85x_default(e4b1bcec-249c-44ff-8528-db19e74a8c36): ErrImagePull: Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jun 16 09:04:53 minikube kubelet[2065]: E0616 09:04:53.432532    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ErrImagePull: \"Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/subnet-manager-d84c64476-lf85x" podUID="e4b1bcec-249c-44ff-8528-db19e74a8c36"
Jun 16 09:04:56 minikube kubelet[2065]: E0616 09:04:56.631238    2065 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:56 minikube kubelet[2065]: E0616 09:04:56.631277    2065 kuberuntime_image.go:55] "Failed to pull image" err="Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="subnet-manager:latest"
Jun 16 09:04:56 minikube kubelet[2065]: E0616 09:04:56.631335    2065 kuberuntime_manager.go:1256] container &Container{Name:subnet-manager,Image:subnet-manager:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dqsr5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod subnet-manager-d84c64476-mrrlv_default(8c6adea0-9a76-437f-80c7-5c1e18cb7a8f): ErrImagePull: Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jun 16 09:04:56 minikube kubelet[2065]: E0616 09:04:56.631357    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ErrImagePull: \"Error response from daemon: pull access denied for subnet-manager, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/subnet-manager-d84c64476-mrrlv" podUID="8c6adea0-9a76-437f-80c7-5c1e18cb7a8f"
Jun 16 09:05:05 minikube kubelet[2065]: E0616 09:05:05.085176    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-lf85x" podUID="e4b1bcec-249c-44ff-8528-db19e74a8c36"
Jun 16 09:05:05 minikube kubelet[2065]: E0616 09:05:05.085827    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-slng8" podUID="d768b9c4-dfde-4651-9205-03cc13af2347"
Jun 16 09:05:10 minikube kubelet[2065]: E0616 09:05:10.083794    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-mrrlv" podUID="8c6adea0-9a76-437f-80c7-5c1e18cb7a8f"
Jun 16 09:05:18 minikube kubelet[2065]: E0616 09:05:18.088820    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-slng8" podUID="d768b9c4-dfde-4651-9205-03cc13af2347"
Jun 16 09:05:20 minikube kubelet[2065]: E0616 09:05:20.090606    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-lf85x" podUID="e4b1bcec-249c-44ff-8528-db19e74a8c36"
Jun 16 09:05:25 minikube kubelet[2065]: E0616 09:05:25.085350    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-mrrlv" podUID="8c6adea0-9a76-437f-80c7-5c1e18cb7a8f"
Jun 16 09:05:29 minikube kubelet[2065]: E0616 09:05:29.085187    2065 pod_workers.go:1298] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"subnet-manager\" with ImagePullBackOff: \"Back-off pulling image \\\"subnet-manager:latest\\\"\"" pod="default/subnet-manager-d84c64476-slng8" podUID="d768b9c4-dfde-4651-9205-03cc13af2347"


==> storage-provisioner [36e0d9617a2c] <==
I0616 08:44:15.405218       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0616 08:44:15.416271       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0616 08:44:15.416534       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0616 08:44:15.437552       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0616 08:44:15.440341       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_4968377b-ccdb-4e6d-a33e-efba863d10ae!
I0616 08:44:15.449798       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"281f6190-3621-41ba-a222-e66270ae257c", APIVersion:"v1", ResourceVersion:"426", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_4968377b-ccdb-4e6d-a33e-efba863d10ae became leader
I0616 08:44:15.542868       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_4968377b-ccdb-4e6d-a33e-efba863d10ae!


==> storage-provisioner [770c444dbc6f] <==
I0616 08:43:44.708922       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0616 08:44:14.712123       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": dial tcp 10.96.0.1:443: i/o timeout

